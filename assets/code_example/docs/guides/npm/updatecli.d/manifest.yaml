name: npm manifest guide

sources:
  npm:
    name: Get latest axios version
    kind: npm
    spec:
      name: axios
      versionfilter:
        kind: semver
        pattern: ~0.9

targets:
  npn:
    name: Ensure package.json and package-lock.json is up to date
    kind: shell

    # The default behavior for a target is to have one of its spec field default to the source resource output.
    #
    # More specifically for a resource of kind "shell", updatecli would append the value after the command such as
    # `npm install --package-lock-only --dry-run=$DRY_RUN axios@ 1.0.0`
    # Please note the space between axios@ and 1.0.0
    #
    # In this context, it doesn't work as the npm command requires axios@1.0.0 to be attached without a space
    #
    # Therefore we disable the default source output by using the parameter "disablesourceinput: true"
    # And then we use the Updatecli specific templating function {{ source "<sourceID>" }}
    disablesourceinput: true

    # scmid bind a target with a scm configuration.
    # Updatecli will clone the referenced git repository in a temporary location, then update 
    # the git repository based on the current declarative pipeline.
    scmid: default
    spec:

      # The environment DRY_RUN is set and used by Updatecli to identify if:
      #   1. we are in dry-run mode by running `updatecli diff --config manifest.yaml`
      #   2. We are in apply mode by running `updatecli apply --config manifest.yaml`
      command: npm install --package-lock-only --dry-run=$DRY_RUN axios@{{ source "npm" }}

      # By default, shell command only have access to the DRY_RUN environment variable.
      # But in this situation, we would also need the PATH value to identify where the npm command is
      #
      # As the PATH environment value is not defined, then it inherit the value from the Updatecli process.
      environments:
        - name: PATH
    
      # changedif defines how Updatecli should interprated a failure or a change
      # in this case we use the changedif of kind "file/checksum".
      # A filechecksum change would report a change.
      changedif:
        kind: file/checksum
        spec:
          files:
            - package-lock.json
            - package.json

# scms defines the git repository configuration which can then be used by the target and the action
# Updatecli will clone that repository in the OS temporary location such as /tmp on Darwin or Linux system.
scms:
  default:
    kind: github
    spec:
      owner: updatecli-test
      repository: guide-npm
      token: '{{ requiredEnv "UPDATECLI_GITHUB_TOKEN" }}'
      username: '{{ requiredEnv "UPDATECLI_GITHUB_ACTOR" }}'
      branch: main

# actions, are actions to execute if the state of a binded target is changed.
# such as opening a pullrequest.
#
actions:
  default:
    # The github/pullrequest means Updatecli will create a temporary branch containing all the changes
    # generated by the different target using the same scmid.
    #
    # Then If needed, it opens a pullrequest targeting the scm branch referenced by scmid
    kind: github/pullrequest
    scmid: default
    spec:
      labels:
        - dependencies
      automerge: true



cut after 15:20 

