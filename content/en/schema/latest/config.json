{
    "$schema": "http://json-schema.org/draft-04/schema",
    "$id": "https://www.updatecli.io/latest/schema/spec",
    "properties": {
        "name": {
            "type": "string",
            "description": "Name defines a pipeline name"
        },
        "pipelineid": {
            "type": "string",
            "description": "PipelineID allows to identify a full pipeline run, this value is propagated into each target if not defined at that level"
        },
        "autodiscovery": {
            "properties": {
                "crawlers": {
                    "$schema": "http://json-schema.org/draft-04/schema",
                    "properties": {
                        "dockerfile": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "rootdir": {
                                    "type": "string",
                                    "description": "RootDir defines the root directory used to recursively search for Helm Chart"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "archs": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Arch specifies a list of docker image architecture"
                                            },
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Dockerfile path pattern, the pattern requires to match all of name, not just a substring."
                                            },
                                            "images": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Image specifies a list of docker image"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Ignore allows to specify rule to ignore autodiscovery a specific Helm based on a rule"
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "archs": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Arch specifies a list of docker image architecture"
                                            },
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Dockerfile path pattern, the pattern requires to match all of name, not just a substring."
                                            },
                                            "images": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Image specifies a list of docker image"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Only allows to specify rule to only autodiscover manifest for a specific Helm based on a rule"
                                },
                                "auths": {
                                    "patternProperties": {
                                        ".*": {
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "description": "Auths provides a map of registry credentials where the key is the registry URL without scheme"
                                },
                                "filematch": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "FileMatch allows to override default Dockerfile file matching. Default [\"Dockerfile\"]"
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "versionfilter provides parameters to specify the version pattern used when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec is a struct fill from Updatecli manifest data and shouldn't be modified at runtime unless For Fields that requires it, we can use the struct Dockerfile Spec defines the parameters which can be provided to the Dockerfile crawler."
                        },
                        "helmfile": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "rootdir": {
                                    "type": "string",
                                    "description": "rootdir defines the root directory used to recursively search for Helmfile manifest"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Helmfile chart path pattern, the pattern requires to match all of name, not just a subpart of the path."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Ignore allows to specify rule to ignore \"autodiscovery\" a specific Helmfile based on a rule"
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Helmfile chart path pattern, the pattern requires to match all of name, not just a subpart of the path."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Only allows to specify rule to only \"autodiscovery\" manifest for a specific Helmfile based on a rule"
                                },
                                "auths": {
                                    "patternProperties": {
                                        ".*": {
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "description": "Auths provides a map of registry credentials where the key is the registry URL without scheme"
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "versionfilter provides parameters to specify the version pattern used when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec defines the Helmfile parameters."
                        },
                        "maven": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "rootdir": {
                                    "type": "string",
                                    "description": "RootDir defines the root directory used to recursively search for Helm Chart"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Helm chart path pattern, the pattern requires to match all of name, not just a substring."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Ignore allows to specify rule to ignore autodiscovery a specific Helm based on a rule"
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Helm chart path pattern, the pattern requires to match all of name, not just a substring."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Only allows to specify rule to only autodiscover manifest for a specific Helm based on a rule"
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "versionfilter provides parameters to specify the version pattern used when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec defines the parameters which can be provided to the Helm builder."
                        },
                        "npm": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "rootdir": {
                                    "type": "string",
                                    "description": "RootDir defines the root directory used to recursively search for npm packages.json"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a package.json path pattern, the pattern requires to match all of name, not just a substring."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Ignore allows to specify rule to ignore autodiscovery a specific NPM based on a rule"
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a package.json path pattern, the pattern requires to match all of name, not just a substring."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Only allows to specify rule to only autodiscover manifest for a specific NPM based on a rule"
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "versionfilter provides parameters to specify the version pattern used when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec defines the parameters which can be provided to the NPM builder."
                        },
                        "cargo": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "rootdir": {
                                    "type": "string",
                                    "description": "RootDir defines the root directory used to recursively search for Cargo.toml"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Cargo crate path pattern, the pattern requires to match all of name, not just a subpart of the path."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Ignore specifies rule to ignore Cargo.toml update."
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Cargo crate path pattern, the pattern requires to match all of name, not just a subpart of the path."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Only specify required rule to restrict Cargo.toml update."
                                },
                                "registries": {
                                    "patternProperties": {
                                        ".*": {
                                            "properties": {
                                                "auth": {
                                                    "properties": {
                                                        "token": {
                                                            "type": "string",
                                                            "description": "[A][S][C] Token specifies the cargo registry token to use for authentication."
                                                        },
                                                        "headerformat": {
                                                            "type": "string",
                                                            "description": "[A][S][C] HeaderFormat specifies the cargo registry header format to use for authentication (defaults to `Bearer`)."
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "[A][S][C] Auth specifies the cargo registry auth to use for authentication."
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "[A][S][C] URL specifies the cargo registry URL to use for authentication."
                                                },
                                                "rootdir": {
                                                    "type": "string",
                                                    "description": "[A][S][C] RootDir specifies the cargo registry root directory to use as FS index."
                                                },
                                                "scmid": {
                                                    "type": "string",
                                                    "description": "[A] SCMID specifies the cargo registry scmId to use as FS index."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "description": "Auths provides a map of registry credentials where the key is the registry URL without scheme"
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "`versionfilter` provides parameters to specify the version pattern to use when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec defines the Cargo parameters."
                        },
                        "dockercompose": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "rootdir": {
                                    "type": "string",
                                    "description": "RootDir defines the root directory used to recursively search for Helm Chart"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "archs": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Arch specifies a list of docker image architecture"
                                            },
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Helm chart path pattern, the pattern requires to match all of name, not just a substring."
                                            },
                                            "services": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Services specifies a list of docker compose services"
                                            },
                                            "images": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Image specifies a list of docker image"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Ignore allows to specify rule to ignore autodiscovery a specific Helm based on a rule"
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "archs": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Arch specifies a list of docker image architecture"
                                            },
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Helm chart path pattern, the pattern requires to match all of name, not just a substring."
                                            },
                                            "services": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Services specifies a list of docker compose services"
                                            },
                                            "images": {
                                                "items": {
                                                    "type": "string"
                                                },
                                                "type": "array",
                                                "description": "Image specifies a list of docker image"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Only allows to specify rule to only autodiscover manifest for a specific Helm based on a rule"
                                },
                                "auths": {
                                    "patternProperties": {
                                        ".*": {
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "description": "Auths provides a map of registry credentials where the key is the registry URL without scheme"
                                },
                                "filematch": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "FileMatch allows to override default docker-compose.yaml file matching. Default [\"docker-compose.yaml\",\"docker-compose.yml\",\"docker-compose.*.yaml\",\"docker-compose.*.yml\"]"
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "versionfilter provides parameters to specify the version pattern used when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec is a struct fill from Updatecli manifest data and shouldn't be modified at runtime unless For Fields that requires it, we can use the struct DockerCompose Spec defines the parameters which can be provided to the Helm builder."
                        },
                        "golang/gomod": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "rootdir": {
                                    "type": "string",
                                    "description": "rootDir defines the root directory used to recursively search for golang go.mod"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a go.mod path pattern, the pattern requires to match all of name, not just a substring."
                                            },
                                            "modules": {
                                                "patternProperties": {
                                                    ".*": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "description": "Modules specifies a list of module pattern."
                                            },
                                            "goversion": {
                                                "type": "string",
                                                "description": "GoVersions specifies a list of version pattern."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "ignore allows to specify \"rule\" to ignore autodiscovery a specific go.mod rule"
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a go.mod path pattern, the pattern requires to match all of name, not just a substring."
                                            },
                                            "modules": {
                                                "patternProperties": {
                                                    ".*": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object",
                                                "description": "Modules specifies a list of module pattern."
                                            },
                                            "goversion": {
                                                "type": "string",
                                                "description": "GoVersions specifies a list of version pattern."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "`only` allows to specify rule to \"only\" autodiscover manifest for a specific golang rule"
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "`versionfilter` provides parameters to specify the version pattern to use when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec defines the parameters which can be provided to the Golang autodiscovery builder."
                        },
                        "helm": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "auths": {
                                    "patternProperties": {
                                        ".*": {
                                            "properties": {
                                                "username": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                                },
                                                "password": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object"
                                        }
                                    },
                                    "type": "object",
                                    "description": "auths provides a map of registry credentials where the key is the registry URL without scheme\n\t\tif empty, updatecli relies on OCI credentials such as the one used by Docker."
                                },
                                "ignorecontainer": {
                                    "type": "boolean",
                                    "description": "ignorecontainer disables OCI container tag update when set to true"
                                },
                                "ignorechartdependency": {
                                    "type": "boolean",
                                    "description": "ignorechartdependency disables Helm chart dependencies update when set to true"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Helm chart path pattern, the pattern requires to match all of name, not just a subpart of the path."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Ignore specifies rule to ignore Helm chart update."
                                },
                                "rootdir": {
                                    "type": "string",
                                    "description": "rootdir defines the root directory used to recursively search for Helm Chart"
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Helm chart path pattern, the pattern requires to match all of name, not just a subpart of the path."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "only specify required rule(s) to restrict Helm chart update."
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "versionfilter provides parameters to specify the version pattern used when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec defines the Helm parameters."
                        },
                        "rancher/fleet": {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "rootdir": {
                                    "type": "string",
                                    "description": "RootDir defines the root directory used to recursively search for Fleet bundle"
                                },
                                "ignore": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Fleet bundle path pattern, the pattern requires to match all of name, not just a substring."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Ignore allows to specify rule to ignore autodiscovery a specific Fleet bundle based on a rule"
                                },
                                "only": {
                                    "items": {
                                        "properties": {
                                            "path": {
                                                "type": "string",
                                                "description": "Path specifies a Fleet bundle path pattern, the pattern requires to match all of name, not just a substring."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "MatchingRule allows to specifies rules to identify manifest"
                                    },
                                    "type": "array",
                                    "description": "Only allows to specify rule to only autodiscover manifest for a specific Fleet bundle based on a rule"
                                },
                                "versionfilter": {
                                    "properties": {
                                        "kind": {
                                            "type": "string",
                                            "description": "specifies the version kind such as semver, regex, or latest"
                                        },
                                        "pattern": {
                                            "type": "string",
                                            "description": "specifies the version pattern according the version kind"
                                        },
                                        "strict": {
                                            "type": "boolean",
                                            "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "versionfilter provides parameters to specify the version pattern used when generating manifest.\n\n\t\tkind - semver\n\t\t\tversionfilter of kind `semver` uses semantic versioning as version filtering\n\t\t\tpattern accepts one of:\n\t\t\t\t`patch` - patch only update patch version\n\t\t\t\t`minor` - minor only update minor version\n\t\t\t\t`major` - major only update major versions\n\t\t\t\t`a version constraint` such as `\u003e= 1.0.0`\n\n\t\tkind - regex\n\t\t\tversionfilter of kind `regex` uses regular expression as version filtering\n\t\t\tpattern accepts a valid regular expression\n\n\t\texample:\n\t\t```\n\t\t\tversionfilter:\n\t\t\t\tkind: semver\n\t\t\t\tpattern: minor\n\t\t```\n\n\t\tand its type like regex, semver, or just latest."
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "description": "Spec defines the parameters which can be provided to the fleet builder."
                        }
                    },
                    "type": "object",
                    "description": "Crawlers defines a map of crawler configuration where the key represent the crawler type"
                },
                "scmid": {
                    "type": "string",
                    "description": "ScmID specifies a scmid configuration to use to generate the manifest"
                },
                "actionid": {
                    "type": "string",
                    "description": "ActionId specifies an action configuration to use to generate the manifest"
                },
                "groupby": {
                    "type": "string",
                    "description": "GroupBy specifies how to group pipeline. The Accepted is one of \"all\", \"individual\""
                },
                "pullrequestid": {
                    "type": "string",
                    "description": "!Deprecated in favor of `actionid`"
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "AutoDiscovery defines parameters to the autodiscovery feature"
        },
        "title": {
            "type": "string",
            "description": "Title is used for the full pipeline"
        },
        "actions": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "kind": {
                                    "enum": [
                                        "github/pullrequest"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "automerge": {
                                            "type": "boolean",
                                            "description": "Specifies if automerge is enabled for the new pullrequest"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Specifies the Pull Request title"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "Specifies user input description used during pull body creation"
                                        },
                                        "labels": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Specifies repository labels used for the Pull Request. !! Labels must already exist on the repository"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "Specifies if a Pull Request is set to draft, default false"
                                        },
                                        "maintainercannotmodify": {
                                            "type": "boolean",
                                            "description": "Specifies if maintainer can modify pullRequest"
                                        },
                                        "mergemethod": {
                                            "type": "string",
                                            "description": "Specifies which merge method is used to incorporate the Pull Request. Accept \"merge\", \"squash\", \"rebase\", or \"\""
                                        },
                                        "usetitleforautomerge": {
                                            "type": "boolean",
                                            "description": "Specifies to use the Pull Request title as commit message when using auto merge, only works for \"squash\" or \"rebase\""
                                        },
                                        "parent": {
                                            "type": "boolean",
                                            "description": "Specifies if a Pull Request should be sent to the parent of a fork."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "ActionSpec specifies the configuration of an action of type \"GitHub Pull Request\""
                                },
                                "scmid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/pullrequest"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "sourcebranch": {
                                            "type": "string",
                                            "description": "\"sourcebranch\" defines the branch name used as a source to create the Gitea pullrequest.\n\n\t\tdefault:\n\t\t\t\"sourcebranch\" inherits the value from the scm branch if a scm of kind \"gitea\" is specified by the action.\n\n\t\tremark:\n\t\t\tunless you know what you are doing, you shouldn't set this value and rely on the scmid to provide the sane default."
                                        },
                                        "targetbranch": {
                                            "type": "string",
                                            "description": "\"targetbranch\" defines the branch name used as a target to create the Gitea pullrequest.\n\n\t\tdefault:\n\t\t\t\"targetbranch\" inherits the value from the scm working branch if a scm of kind \"gitea\" is specified by the action.\n\n\t\tremark:\n\t\t\tunless you know what you are doing, you shouldn't set this value and rely on the scmid to provide the sane default.\n\t\t\tthe Gitea scm will create and use a working branch such as updatecli_xxxx"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "\"owner\" defines the Gitea repository owner.\n\n\t\tremark:\n\t\t\tunless you know what you are doing, you shouldn't set this value and rely on the scmid to provide the sane default."
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "\"repository\" defines the Gitea repository for a specific owner\n\n\t\tremark:\n\t\t\tunless you know what you are doing, you shouldn't set this value and rely on the scmid to provide the sane default."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "\"title\" defines the Gitea pullrequest title\n\n\t\tdefault:\n\t\t\tA Gitea pullrequest title is defined by one of the following location (first match)\n\t\t\t\t1. title is defined by the spec such as:\n\n\t\t\t\t\tactions:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tkind: gitea/pullrequest\n\t\t\t\t\t\t\tscmid: default\n\t\t\t\t\t\t\tspec:\n\t\t\t\t\t\t\t\ttitle: This is my awesome title\n\n\t\t\t\t2. title is defined by the action such as:\n\n\t\t\t\t\tactions:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tkind: gitea/pullrequest\n\t\t\t\t\t\t\tscmid default\n\t\t\t\t\t\t\ttitle: This is my awesome title\n\n\t\t\t\t3. title is defined by the first associated target title\n\n\t\t\t\t4. title is defined by the pipeline title\n\n\t\tremark:\n\t\t\tusually we prefer to go with option 2"
                                        },
                                        "body": {
                                            "type": "string",
                                            "description": "\"body\" defines a custom body pullrequest.\n\n\t\tdefault:\n\t\t\tBy default a pullrequest body is generated out of a pipeline execution.\n\n\t\tremark:\n\t\t\tUnless you know what you are doing, you shouldn't set this value and rely on the sane default.\n\t\t\t\"body\" is useful to provide additional information when reviewing pullrequest, such as changelog url."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea pullrequest It's a mapping of user input from a Updatecli manifest and it shouldn't modified"
                                },
                                "scmid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "kind": {
                                    "enum": [
                                        "stash/pullrequest"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Bitbucket enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Bitbucket API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Repository specifies the name of a repository for a specific owner"
                                        },
                                        "sourcebranch": {
                                            "type": "string",
                                            "description": "SourceBranch specifies the pullrequest source branch"
                                        },
                                        "targetbranch": {
                                            "type": "string",
                                            "description": "TargetBranch specifies the pullrequest target branch"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Title defines the Bitbucket pullrequest title."
                                        },
                                        "body": {
                                            "type": "string",
                                            "description": "Body defines the Bitbucket pullrequest body"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Bitbucket pullrequest It's a mapping of user input from a Updatecli manifest and it shouldn't modified"
                                },
                                "scmid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/mergerequest"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "sourcebranch": {
                                            "type": "string",
                                            "description": "\"sourcebranch\" defines the branch name used as a source to create the GitLab mergerequest.\n\n\t\tdefault:\n\t\t\t\"sourcebranch\" inherits the value from the scm branch if a scm of kind \"gitlab\" is specified by the action.\n\n\t\tremark:\n\t\t\tunless you know what you are doing, you shouldn't set this value and rely on the scmid to provide the sane default."
                                        },
                                        "targetbranch": {
                                            "type": "string",
                                            "description": "\"targetbranch\" defines the branch name used as a target to create the GitLab mergerequest.\n\n\t\tdefault:\n\t\t\t\"targetbranch\" inherits the value from the scm working branch if a scm of kind \"gitlab\" is specified by the action.\n\n\t\tremark:\n\t\t\tunless you know what you are doing, you shouldn't set this value and rely on the scmid to provide the sane default.\n\t\t\tthe GitLab scm will create and use a working branch such as updatecli_xxxx"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "\"owner\" defines the GitLab repository owner.\n\n\t\tremark:\n\t\t\tunless you know what you are doing, you shouldn't set this value and rely on the scmid to provide the sane default."
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "\"repository\" defines the GitLab repository for a specific owner\n\n\t\tremark:\n\t\t\tunless you know what you are doing, you shouldn't set this value and rely on the scmid to provide the sane default."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "\"title\" defines the GitLab mergerequest title\n\n\t\tdefault:\n\t\t\tA GitLab mergerequest title is defined by one of the following location (first match)\n\t\t\t\t1. title is defined by the spec such as:\n\n\t\t\t\t\tactions:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tkind: gitlab/mergerequest\n\t\t\t\t\t\t\tscmid: default\n\t\t\t\t\t\t\tspec:\n\t\t\t\t\t\t\t\ttitle: This is my awesome title\n\n\t\t\t\t2. title is defined by the action such as:\n\n\t\t\t\t\tactions:\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tkind: gitlab/mergerequest\n\t\t\t\t\t\t\tscmid default\n\t\t\t\t\t\t\ttitle: This is my awesome title\n\n\t\t\t\t3. title is defined by the first associated target title\n\n\t\t\t\t4. title is defined by the pipeline title\n\n\t\tremark:\n\t\t\tusually we prefer to go with option 2"
                                        },
                                        "body": {
                                            "type": "string",
                                            "description": "\"body\" defines a custom mergerequest body\n\n\t\tdefault:\n\t\t\tBy default a mergerequest body is generated out of a pipeline execution.\n\n\t\tremark:\n\t\t\tUnless you know what you are doing, you shouldn't set this value and rely on the sane default.\n\t\t\t\"body\" is useful to provide additional information when reviewing mergerequest, such as changelog url."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab pullrequest It's a mapping of user input from a Updatecli manifest and it shouldn't modified"
                                },
                                "scmid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        }
                    ]
                }
            },
            "type": "object",
            "description": "Actions defines the list of action configurations which need to be managed"
        },
        "scms": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "kind": {
                                    "enum": [
                                        "git"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "URL specifies the git url"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "Username specifies the username for http authentication"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "Password specifies the password for http authentication"
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "Branch specifies the git branch"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "User specifies the git commit author"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email specifies the git commit email"
                                        },
                                        "directory": {
                                            "type": "string",
                                            "description": "Directory specifies the directory to use for cloning the repository"
                                        },
                                        "force": {
                                            "type": "boolean",
                                            "description": "Force is used during the git push phase to run `git push --force`."
                                        },
                                        "commitmessage": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Define commit type, like chore, fix, etc"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "description": "Define commit type scope"
                                                },
                                                "footers": {
                                                    "type": "string",
                                                    "description": "Define commit footer"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Define commit title"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "description": "Define commit body"
                                                },
                                                "hidecredit": {
                                                    "type": "boolean",
                                                    "description": "Display updatecli credits inside commit message body"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "CommitMessage contains conventional commit metadata as type or scope, used to generate the final commit message."
                                        },
                                        "gpg": {
                                            "properties": {
                                                "signingkey": {
                                                    "type": "string",
                                                    "description": "Defines the gpg key"
                                                },
                                                "passphrase": {
                                                    "type": "string",
                                                    "description": "Define the gpg passphrase"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "GPG key and passphrased used for commit signing"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url"
                                    ],
                                    "description": "Spec contains settings to manipulate a git repository."
                                },
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "kind": {
                                    "enum": [
                                        "gitea"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "commitmessage": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Define commit type, like chore, fix, etc"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "description": "Define commit type scope"
                                                },
                                                "footers": {
                                                    "type": "string",
                                                    "description": "Define commit footer"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Define commit title"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "description": "Define commit body"
                                                },
                                                "hidecredit": {
                                                    "type": "boolean",
                                                    "description": "Display updatecli credits inside commit message body"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "CommitMessage represents conventional commit metadata as type or scope, used to generate the final commit message."
                                        },
                                        "directory": {
                                            "type": "string",
                                            "description": "Directory specifies where the github repository is cloned on the local disk"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email specifies which emails to use when creating commits"
                                        },
                                        "force": {
                                            "type": "boolean",
                                            "description": "Force is used during the git push phase to run `git push --force`."
                                        },
                                        "gpg": {
                                            "properties": {
                                                "signingkey": {
                                                    "type": "string",
                                                    "description": "Defines the gpg key"
                                                },
                                                "passphrase": {
                                                    "type": "string",
                                                    "description": "Define the gpg passphrase"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "GPG key and passphrased used for commit signing"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Repository specifies the name of a repository for a specific owner"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "User specifies the user of the git commit messages"
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "Branch specifies which Gitea repository branch to work on"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "kind": {
                                    "enum": [
                                        "github"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "branch": {
                                            "type": "string",
                                            "description": "Branch specifies which github branch to work on"
                                        },
                                        "directory": {
                                            "type": "string",
                                            "description": "Directory specifies where the github repository is cloned on the local disk"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email specifies which emails to use when creating commits"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Repository specifies the name of a repository for a specific owner"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "Token specifies the credential used to authenticate with"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "URL specifies the default github url in case of GitHub enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "Username specifies the username used to authenticate with GitHub API"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "User specifies the user of the git commit messages"
                                        },
                                        "gpg": {
                                            "properties": {
                                                "signingkey": {
                                                    "type": "string",
                                                    "description": "Defines the gpg key"
                                                },
                                                "passphrase": {
                                                    "type": "string",
                                                    "description": "Define the gpg passphrase"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "GPG key and passphrased used for commit signing"
                                        },
                                        "force": {
                                            "type": "boolean",
                                            "description": "Force is used during the git push phase to run `git push --force`."
                                        },
                                        "commitmessage": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Define commit type, like chore, fix, etc"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "description": "Define commit type scope"
                                                },
                                                "footers": {
                                                    "type": "string",
                                                    "description": "Define commit footer"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Define commit title"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "description": "Define commit body"
                                                },
                                                "hidecredit": {
                                                    "type": "boolean",
                                                    "description": "Display updatecli credits inside commit message body"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "CommitMessage represents conventional commit metadata as type or scope, used to generate the final commit message."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "owner",
                                        "repository",
                                        "token"
                                    ],
                                    "description": "Spec represents the configuration input"
                                },
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "kind": {
                                    "enum": [
                                        "gitlab"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "commitmessage": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Define commit type, like chore, fix, etc"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "description": "Define commit type scope"
                                                },
                                                "footers": {
                                                    "type": "string",
                                                    "description": "Define commit footer"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Define commit title"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "description": "Define commit body"
                                                },
                                                "hidecredit": {
                                                    "type": "boolean",
                                                    "description": "Display updatecli credits inside commit message body"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "CommitMessage represents conventional commit metadata as type or scope, used to generate the final commit message."
                                        },
                                        "directory": {
                                            "type": "string",
                                            "description": "Directory specifies where the github repository is cloned on the local disk"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email specifies which emails to use when creating commits"
                                        },
                                        "force": {
                                            "type": "boolean",
                                            "description": "Force is used during the git push phase to run `git push --force`."
                                        },
                                        "gpg": {
                                            "properties": {
                                                "signingkey": {
                                                    "type": "string",
                                                    "description": "Defines the gpg key"
                                                },
                                                "passphrase": {
                                                    "type": "string",
                                                    "description": "Define the gpg passphrase"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "GPG key and passphrased used for commit signing"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Repository specifies the name of a repository for a specific owner"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "User specifies the user of the git commit messages"
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "Branch specifies which GitLab repository branch to work on"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "kind": {
                                    "enum": [
                                        "stash"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Bitbucket enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Bitbucket API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Repository specifies the name of a repository for a specific owner"
                                        },
                                        "commitmessage": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Define commit type, like chore, fix, etc"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "description": "Define commit type scope"
                                                },
                                                "footers": {
                                                    "type": "string",
                                                    "description": "Define commit footer"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Define commit title"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "description": "Define commit body"
                                                },
                                                "hidecredit": {
                                                    "type": "boolean",
                                                    "description": "Display updatecli credits inside commit message body"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "CommitMessage represents conventional commit metadata as type or scope, used to generate the final commit message."
                                        },
                                        "directory": {
                                            "type": "string",
                                            "description": "Directory specifies where the github repository is cloned on the local disk"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email specifies which emails to use when creating commits"
                                        },
                                        "force": {
                                            "type": "boolean",
                                            "description": "Force is used during the git push phase to run `git push --force`."
                                        },
                                        "gpg": {
                                            "properties": {
                                                "signingkey": {
                                                    "type": "string",
                                                    "description": "Defines the gpg key"
                                                },
                                                "passphrase": {
                                                    "type": "string",
                                                    "description": "Define the gpg passphrase"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "GPG key and passphrased used for commit signing"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "User specifies the user of the git commit messages"
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "Branch specifies which Bitbucket repository branch to work on"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Bitbucket release"
                                },
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        }
                    ]
                }
            },
            "type": "object",
            "description": "SCMs defines the list of repository configuration used to fetch content from."
        },
        "sources": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T]Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] Title defines the GitLab release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag defines the GitLab release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] Commitish defines the commit-ish such as `main`"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "[T] Description defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] Draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] Prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "jenkins"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "release": {
                                            "type": "string",
                                            "description": "[s][c] Defines the release name. It accepts \"stable\" or \"weekly\""
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[s][c] Defines a specific release version (condition only)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"jenkins\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang/gomod"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File defines the go.mod file, default to \"go.mod\""
                                        },
                                        "module": {
                                            "type": "string",
                                            "description": "Module defines the module path"
                                        },
                                        "indirect": {
                                            "type": "boolean",
                                            "description": "Indirect specifies if we manipulate an indirect dependency"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Version Defines a specific golang version"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"Golang\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "maven"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Deprecated, please specify the Maven url in the repository"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Specifies the maven repository url + name"
                                        },
                                        "repositories": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Repositories specifies a list of Maven repository where to look for version. Order matter, version is retrieve from the first repository with the last one being Maven Central."
                                        },
                                        "groupid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact groupID"
                                        },
                                        "artifactid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact artifactID"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"maven\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "xml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File defines the xml path to interact with"
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path defines the xmlPAth used for doing the query"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific Path. Default value fetch from source input"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "aws/ami"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "accesskey": {
                                            "type": "string",
                                            "description": "accesskey specifies the aws access key which combined with `secretkey`, is one of the way to authenticate"
                                        },
                                        "secretkey": {
                                            "type": "string",
                                            "description": "secretkey specifies the aws secret key which combined with `accesskey`, is one of the way to authenticate"
                                        },
                                        "filters": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name specifies a filter name."
                                                    },
                                                    "values": {
                                                        "type": "string",
                                                        "description": "Values specifies a filter value for a specific filter name."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Filter represents the updatecli configuration describing AMI filters."
                                            },
                                            "type": "array",
                                            "description": "Filters specifies a list of AMI filters"
                                        },
                                        "region": {
                                            "type": "string",
                                            "description": "Region specifies the AWS region to use when looking for AMI"
                                        },
                                        "endpoint": {
                                            "type": "string",
                                            "description": "Endpoint specifies the AWS endpoint to use when looking for AMI"
                                        },
                                        "dryrun": {
                                            "type": "boolean",
                                            "description": "Dryrun allows to Check whether you have the required permissions for the action."
                                        },
                                        "sortby": {
                                            "type": "string",
                                            "description": "Sortby specifies the order of AMI-ID that will be used to retrieve the last element such as `creationdateasc`"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec contains the updatecli configuration provided by users."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "file"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File contains the file path(s) to take in account and is incompatible with Files"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Files contains the file path(s) to take in account and is incompatible with File"
                                        },
                                        "line": {
                                            "type": "integer",
                                            "description": "Line contains the line of the file(s) to take in account"
                                        },
                                        "content": {
                                            "type": "string",
                                            "description": "Content specifies the content to take in account instead of the file content"
                                        },
                                        "forcecreate": {
                                            "type": "boolean",
                                            "description": "ForceCreate specifies if nonexistent file(s) should be created if they are targets"
                                        },
                                        "matchpattern": {
                                            "type": "string",
                                            "description": "MatchPattern specifies the regexp pattern to match on the file(s)"
                                        },
                                        "replacepattern": {
                                            "type": "string",
                                            "description": "ReplacePattern specifies the regexp replace pattern to apply on the file(s) content"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"file\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "githubrelease"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "owner": {
                                            "type": "string",
                                            "description": "[s][c] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[s][c] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[s][c] Token specifies the credential used to authenticate with"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[s][c] URL specifies the default github url in case of GitHub enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[s][c] Username specifies the username used to authenticate with GitHub API"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "typefilter": {
                                            "properties": {
                                                "draft": {
                                                    "type": "boolean",
                                                    "description": "\"Draft\" enable/disable GitHub draft release"
                                                },
                                                "prerelease": {
                                                    "type": "boolean",
                                                    "description": "\"PreRelease\" enable/disable GitHub PreRelease"
                                                },
                                                "release": {
                                                    "type": "boolean",
                                                    "description": "\"Release\" enable/disable GitHub release"
                                                },
                                                "latest": {
                                                    "type": "boolean",
                                                    "description": "\"Latest\" if set to true will only filter the release flag as latest."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] TypeFilter specifies the GitHub Release type to retrieve before applying the versionfilter rule"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[c] Tag allows to check for a specific release tag, default to source output"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "owner",
                                        "repository",
                                        "token"
                                    ],
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerdigest"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[s][c] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[s][c] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[s] Tag specifies the container image tag such as `latest`"
                                        },
                                        "digest": {
                                            "type": "string",
                                            "description": "[c] Digest specifies the container image digest such as `@sha256:ce782db15ab5491c6c6178da8431b3db66988ccd11512034946a9667846952a6`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerdigest\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "json"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the Json file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the Jsonpath key to manipulate"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the Jsonpath key to manipulate. Default to source output"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "stash/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Bitbucket enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Bitbucket API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Bitbucket tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Bitbucket release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] owner specifies the repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T] repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] versionfilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] title defines the Gitea release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] tag defines the Gitea release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] commitish defines the commit-ish such as `main`"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "[T] description defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Version defines a specific golang version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"Golang\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang/module"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "proxy": {
                                            "type": "string",
                                            "description": "Proxy may have the schemes https, http. file is not supported at this time. If a URL has no scheme, https is assumed\n[S][C] Proxy allows to override GO proxy similarly to GOPROXY environment variable."
                                        },
                                        "module": {
                                            "type": "string",
                                            "description": "[S][C] Module specifies the name of the module"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Defines a specific package version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "module"
                                    ],
                                    "description": "Spec defines a specification for a \"gomodule\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitbranch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[c][t] Specify branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gitbranch\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Gitea tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the GitLab tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "npm"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Defines the specific npm package name"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Defines a specific package version"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "URL defines the registry url (defaults to `https://registry.npmjs.org/`)"
                                        },
                                        "registrytoken": {
                                            "type": "string",
                                            "description": "RegistryToken defines the token to use when connection to the registry"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "npmrcpath": {
                                            "type": "string",
                                            "description": "NpmrcPath defines the path to the .npmrc file"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an Npm package parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "shell"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "command": {
                                            "type": "string",
                                            "description": "command specifies the shell command to execute by Updatecli"
                                        },
                                        "environments": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name defines the environment variable name"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "Value defines the environment variable value"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "name"
                                                ],
                                                "description": "Environment is a struct containing information for an environment variable such as its name and its value"
                                            },
                                            "type": "array",
                                            "description": "environments allows to pass environment variable(s) to the shell script. By default no environment variable are shared."
                                        },
                                        "changedif": {
                                            "oneOf": [
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "console/output"
                                                            ]
                                                        },
                                                        "spec": true
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "exitcode"
                                                            ]
                                                        },
                                                        "spec": {
                                                            "$schema": "http://json-schema.org/draft-04/schema",
                                                            "properties": {
                                                                "warning": {
                                                                    "type": "integer",
                                                                    "description": "Warning defines the command exit code used by Updatecli to identify a change need. Default to 2 if no exitcode have been specified"
                                                                },
                                                                "success": {
                                                                    "type": "integer",
                                                                    "description": "Success defines the command exit code used by Updatecli to identify no changes are needed. Default to 0 if no exitcode have been specified"
                                                                },
                                                                "failure": {
                                                                    "type": "integer",
                                                                    "description": "Failure defines the command exit code used by Updatecli to identify that something went wrong. Default to 1 if no exitcode have been specified"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "type": "object",
                                                            "required": [
                                                                "warning",
                                                                "success",
                                                                "failure"
                                                            ]
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "file/checksum"
                                                            ]
                                                        },
                                                        "spec": {
                                                            "$schema": "http://json-schema.org/draft-04/schema",
                                                            "properties": {
                                                                "files": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array",
                                                                    "description": "Files specifies the list of file that Updatecli monitors to identify state change"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "type": "object",
                                                            "required": [
                                                                "files"
                                                            ]
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                }
                                            ],
                                            "description": "ChangedIf defines how to interpreted shell command success criteria. What a success means, what an error means, and what a warning would mean"
                                        },
                                        "shell": {
                                            "type": "string",
                                            "description": "Shell specifies which shell interpreter to use. Default to powershell(Windows) and \"/bin/sh\" (Darwin/Linux)"
                                        },
                                        "workdir": {
                                            "type": "string",
                                            "description": "workdir specifies the working directory path from where to execute the command. It defaults to the current context path (scm or current shell). Updatecli join the current path and the one specified in parameter if the parameter one contains a relative path."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "command"
                                    ],
                                    "description": "Spec defines a specification for a \"shell\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "csv"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the csv file"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv query"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv value, default to source output"
                                        },
                                        "comma": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv separator character, default \",\""
                                        },
                                        "comment": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv comment character, default \"#\""
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerfile"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File specifies the dockerimage file such as Dockerfile"
                                        },
                                        "instruction": {
                                            "description": "Instruction specifies a DockerImage instruction such as ENV"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Value specifies the value for a specified Dockerfile instruction."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerfile\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gittag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Message associated to the git tag"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "Key of the tag object to retrieve, default is tag \"name\" filters are always against tag name, this only controls the output; Current options are 'name' and 'hash'."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "toml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the toml file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the query to retrieve an information from a toml file"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific key. Default to source output"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "helmchart"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[target] Defines the Helm Chart file to update."
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[target] Defines the key to update within the file."
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "[target] Defines the Chart name path like 'stable/chart'."
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the chart location URL."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[target] Defines the value to set for a key"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the Chart version, default value set based on a source input value"
                                        },
                                        "versionincrement": {
                                            "type": "string",
                                            "description": "[target] Defines if a Chart changes, triggers, or not, a Chart version update, accepted values is a comma separated list of \"none,major,minor,patch\""
                                        },
                                        "appversion": {
                                            "type": "boolean",
                                            "description": "[target] Enable AppVersion update based in source input."
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like 'regex', 'semver', or just 'latest'."
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an \"helmchart\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "stash/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Bitbucket enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Bitbucket API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Bitbucket release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "yaml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "\"file\" defines the yaml file path to interact with.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* \"file\" and \"files\" are mutually exclusive\n\t\t\t* when used as a source or condition, the file path also accept the following protocols\n\t\t\t* protocols \"https://\", \"http://\", and \"file://\" are supported in path for source and condition"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "\"files\" defines the list of yaml files path to interact with.\n\n\t\tcompatible:\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* file and files are mutually exclusive\n\t\t\t* protocols \"https://\", \"http://\", and \"file://\" are supported in file path for source and condition"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "\"key\" defines the yaml keypath.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* key is a simpler version of yamlpath accepts keys.\n\n\t\texample:\n\t\t\t* key: $.name\n\t\t\t* key: $.agent.name\n\t\t\t* key: $.agents[0].name\n\t\t\t* key: $.agents[*].name\n\t\t\t* key: $.'agents.name'\n\n\t\tremark:\n\t\t\tfield path with key/value is not supported at the moment.\n\t\t\tsome help would be useful on https://github.com/goccy/go-yaml/issues/290"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "\"value\" is the value associated with a yaml key.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tdefault:\n\t\t\tWhen used from a condition or a target, the default value is set to linked source output."
                                        },
                                        "keyonly": {
                                            "type": "boolean",
                                            "description": "\"keyonly\" allows to only check if a key exist and do not return an error otherwise\n\n\t\tcompatible:\n\t\t\t* condition\n\n\t\tdefault:\n\t\t\tfalse"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "\"yaml\" defines the specification for manipulating \"yaml\" files."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerimage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architectures": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[C] architectures specifies a list of architectures to check container images for (conditions only)"
                                        },
                                        "architecture": {
                                            "type": "string",
                                            "description": "[S][C] architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[S][C] image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C] tag specifies the container image tag such as `latest`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] versionfilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tagfilter": {
                                            "type": "string",
                                            "description": "[S] tagfilter allows to restrict tags retrieved from a remote registry by using a regular expression."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "cargopackage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "registry": {
                                            "properties": {
                                                "auth": {
                                                    "properties": {
                                                        "token": {
                                                            "type": "string",
                                                            "description": "[A][S][C] Token specifies the cargo registry token to use for authentication."
                                                        },
                                                        "headerformat": {
                                                            "type": "string",
                                                            "description": "[A][S][C] HeaderFormat specifies the cargo registry header format to use for authentication (defaults to `Bearer`)."
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "[A][S][C] Auth specifies the cargo registry auth to use for authentication."
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "[A][S][C] URL specifies the cargo registry URL to use for authentication."
                                                },
                                                "rootdir": {
                                                    "type": "string",
                                                    "description": "[A][S][C] RootDir specifies the cargo registry root directory to use as FS index."
                                                },
                                                "scmid": {
                                                    "type": "string",
                                                    "description": "[A] SCMID specifies the cargo registry scmId to use as FS index."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] Registry specifies the registry to use"
                                        },
                                        "package": {
                                            "type": "string",
                                            "description": "[S][C] Package specifies the name of the package"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Defines a specific package version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "package"
                                    ],
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        }
                    ]
                }
            },
            "type": "object",
            "description": "Sources defines the list of source configuration"
        },
        "conditions": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang/module"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "proxy": {
                                            "type": "string",
                                            "description": "Proxy may have the schemes https, http. file is not supported at this time. If a URL has no scheme, https is assumed\n[S][C] Proxy allows to override GO proxy similarly to GOPROXY environment variable."
                                        },
                                        "module": {
                                            "type": "string",
                                            "description": "[S][C] Module specifies the name of the module"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Defines a specific package version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "module"
                                    ],
                                    "description": "Spec defines a specification for a \"gomodule\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "json"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the Json file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the Jsonpath key to manipulate"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the Jsonpath key to manipulate. Default to source output"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "cargopackage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "registry": {
                                            "properties": {
                                                "auth": {
                                                    "properties": {
                                                        "token": {
                                                            "type": "string",
                                                            "description": "[A][S][C] Token specifies the cargo registry token to use for authentication."
                                                        },
                                                        "headerformat": {
                                                            "type": "string",
                                                            "description": "[A][S][C] HeaderFormat specifies the cargo registry header format to use for authentication (defaults to `Bearer`)."
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "[A][S][C] Auth specifies the cargo registry auth to use for authentication."
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "[A][S][C] URL specifies the cargo registry URL to use for authentication."
                                                },
                                                "rootdir": {
                                                    "type": "string",
                                                    "description": "[A][S][C] RootDir specifies the cargo registry root directory to use as FS index."
                                                },
                                                "scmid": {
                                                    "type": "string",
                                                    "description": "[A] SCMID specifies the cargo registry scmId to use as FS index."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] Registry specifies the registry to use"
                                        },
                                        "package": {
                                            "type": "string",
                                            "description": "[S][C] Package specifies the name of the package"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Defines a specific package version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "package"
                                    ],
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Gitea tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "jenkins"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "release": {
                                            "type": "string",
                                            "description": "[s][c] Defines the release name. It accepts \"stable\" or \"weekly\""
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[s][c] Defines a specific release version (condition only)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"jenkins\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "stash/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Bitbucket enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Bitbucket API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Bitbucket tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Bitbucket release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "githubrelease"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "owner": {
                                            "type": "string",
                                            "description": "[s][c] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[s][c] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[s][c] Token specifies the credential used to authenticate with"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[s][c] URL specifies the default github url in case of GitHub enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[s][c] Username specifies the username used to authenticate with GitHub API"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "typefilter": {
                                            "properties": {
                                                "draft": {
                                                    "type": "boolean",
                                                    "description": "\"Draft\" enable/disable GitHub draft release"
                                                },
                                                "prerelease": {
                                                    "type": "boolean",
                                                    "description": "\"PreRelease\" enable/disable GitHub PreRelease"
                                                },
                                                "release": {
                                                    "type": "boolean",
                                                    "description": "\"Release\" enable/disable GitHub release"
                                                },
                                                "latest": {
                                                    "type": "boolean",
                                                    "description": "\"Latest\" if set to true will only filter the release flag as latest."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] TypeFilter specifies the GitHub Release type to retrieve before applying the versionfilter rule"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[c] Tag allows to check for a specific release tag, default to source output"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "owner",
                                        "repository",
                                        "token"
                                    ],
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "npm"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Defines the specific npm package name"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Defines a specific package version"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "URL defines the registry url (defaults to `https://registry.npmjs.org/`)"
                                        },
                                        "registrytoken": {
                                            "type": "string",
                                            "description": "RegistryToken defines the token to use when connection to the registry"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "npmrcpath": {
                                            "type": "string",
                                            "description": "NpmrcPath defines the path to the .npmrc file"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an Npm package parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "file"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File contains the file path(s) to take in account and is incompatible with Files"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Files contains the file path(s) to take in account and is incompatible with File"
                                        },
                                        "line": {
                                            "type": "integer",
                                            "description": "Line contains the line of the file(s) to take in account"
                                        },
                                        "content": {
                                            "type": "string",
                                            "description": "Content specifies the content to take in account instead of the file content"
                                        },
                                        "forcecreate": {
                                            "type": "boolean",
                                            "description": "ForceCreate specifies if nonexistent file(s) should be created if they are targets"
                                        },
                                        "matchpattern": {
                                            "type": "string",
                                            "description": "MatchPattern specifies the regexp pattern to match on the file(s)"
                                        },
                                        "replacepattern": {
                                            "type": "string",
                                            "description": "ReplacePattern specifies the regexp replace pattern to apply on the file(s) content"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"file\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T]Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] Title defines the GitLab release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag defines the GitLab release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] Commitish defines the commit-ish such as `main`"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "[T] Description defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] Draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] Prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "stash/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Bitbucket enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Bitbucket API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Bitbucket release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "aws/ami"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "accesskey": {
                                            "type": "string",
                                            "description": "accesskey specifies the aws access key which combined with `secretkey`, is one of the way to authenticate"
                                        },
                                        "secretkey": {
                                            "type": "string",
                                            "description": "secretkey specifies the aws secret key which combined with `accesskey`, is one of the way to authenticate"
                                        },
                                        "filters": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name specifies a filter name."
                                                    },
                                                    "values": {
                                                        "type": "string",
                                                        "description": "Values specifies a filter value for a specific filter name."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Filter represents the updatecli configuration describing AMI filters."
                                            },
                                            "type": "array",
                                            "description": "Filters specifies a list of AMI filters"
                                        },
                                        "region": {
                                            "type": "string",
                                            "description": "Region specifies the AWS region to use when looking for AMI"
                                        },
                                        "endpoint": {
                                            "type": "string",
                                            "description": "Endpoint specifies the AWS endpoint to use when looking for AMI"
                                        },
                                        "dryrun": {
                                            "type": "boolean",
                                            "description": "Dryrun allows to Check whether you have the required permissions for the action."
                                        },
                                        "sortby": {
                                            "type": "string",
                                            "description": "Sortby specifies the order of AMI-ID that will be used to retrieve the last element such as `creationdateasc`"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec contains the updatecli configuration provided by users."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "shell"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "command": {
                                            "type": "string",
                                            "description": "command specifies the shell command to execute by Updatecli"
                                        },
                                        "environments": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name defines the environment variable name"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "Value defines the environment variable value"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "name"
                                                ],
                                                "description": "Environment is a struct containing information for an environment variable such as its name and its value"
                                            },
                                            "type": "array",
                                            "description": "environments allows to pass environment variable(s) to the shell script. By default no environment variable are shared."
                                        },
                                        "changedif": {
                                            "oneOf": [
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "exitcode"
                                                            ]
                                                        },
                                                        "spec": {
                                                            "$schema": "http://json-schema.org/draft-04/schema",
                                                            "properties": {
                                                                "warning": {
                                                                    "type": "integer",
                                                                    "description": "Warning defines the command exit code used by Updatecli to identify a change need. Default to 2 if no exitcode have been specified"
                                                                },
                                                                "success": {
                                                                    "type": "integer",
                                                                    "description": "Success defines the command exit code used by Updatecli to identify no changes are needed. Default to 0 if no exitcode have been specified"
                                                                },
                                                                "failure": {
                                                                    "type": "integer",
                                                                    "description": "Failure defines the command exit code used by Updatecli to identify that something went wrong. Default to 1 if no exitcode have been specified"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "type": "object",
                                                            "required": [
                                                                "warning",
                                                                "success",
                                                                "failure"
                                                            ]
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "file/checksum"
                                                            ]
                                                        },
                                                        "spec": {
                                                            "$schema": "http://json-schema.org/draft-04/schema",
                                                            "properties": {
                                                                "files": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array",
                                                                    "description": "Files specifies the list of file that Updatecli monitors to identify state change"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "type": "object",
                                                            "required": [
                                                                "files"
                                                            ]
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "console/output"
                                                            ]
                                                        },
                                                        "spec": true
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                }
                                            ],
                                            "description": "ChangedIf defines how to interpreted shell command success criteria. What a success means, what an error means, and what a warning would mean"
                                        },
                                        "shell": {
                                            "type": "string",
                                            "description": "Shell specifies which shell interpreter to use. Default to powershell(Windows) and \"/bin/sh\" (Darwin/Linux)"
                                        },
                                        "workdir": {
                                            "type": "string",
                                            "description": "workdir specifies the working directory path from where to execute the command. It defaults to the current context path (scm or current shell). Updatecli join the current path and the one specified in parameter if the parameter one contains a relative path."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "command"
                                    ],
                                    "description": "Spec defines a specification for a \"shell\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] owner specifies the repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T] repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] versionfilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] title defines the Gitea release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] tag defines the Gitea release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] commitish defines the commit-ish such as `main`"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "[T] description defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang/gomod"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File defines the go.mod file, default to \"go.mod\""
                                        },
                                        "module": {
                                            "type": "string",
                                            "description": "Module defines the module path"
                                        },
                                        "indirect": {
                                            "type": "boolean",
                                            "description": "Indirect specifies if we manipulate an indirect dependency"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Version Defines a specific golang version"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"Golang\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "xml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File defines the xml path to interact with"
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path defines the xmlPAth used for doing the query"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific Path. Default value fetch from source input"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "yaml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "\"file\" defines the yaml file path to interact with.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* \"file\" and \"files\" are mutually exclusive\n\t\t\t* when used as a source or condition, the file path also accept the following protocols\n\t\t\t* protocols \"https://\", \"http://\", and \"file://\" are supported in path for source and condition"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "\"files\" defines the list of yaml files path to interact with.\n\n\t\tcompatible:\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* file and files are mutually exclusive\n\t\t\t* protocols \"https://\", \"http://\", and \"file://\" are supported in file path for source and condition"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "\"key\" defines the yaml keypath.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* key is a simpler version of yamlpath accepts keys.\n\n\t\texample:\n\t\t\t* key: $.name\n\t\t\t* key: $.agent.name\n\t\t\t* key: $.agents[0].name\n\t\t\t* key: $.agents[*].name\n\t\t\t* key: $.'agents.name'\n\n\t\tremark:\n\t\t\tfield path with key/value is not supported at the moment.\n\t\t\tsome help would be useful on https://github.com/goccy/go-yaml/issues/290"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "\"value\" is the value associated with a yaml key.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tdefault:\n\t\t\tWhen used from a condition or a target, the default value is set to linked source output."
                                        },
                                        "keyonly": {
                                            "type": "boolean",
                                            "description": "\"keyonly\" allows to only check if a key exist and do not return an error otherwise\n\n\t\tcompatible:\n\t\t\t* condition\n\n\t\tdefault:\n\t\t\tfalse"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "\"yaml\" defines the specification for manipulating \"yaml\" files."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerdigest"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[s][c] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[s][c] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[s] Tag specifies the container image tag such as `latest`"
                                        },
                                        "digest": {
                                            "type": "string",
                                            "description": "[c] Digest specifies the container image digest such as `@sha256:ce782db15ab5491c6c6178da8431b3db66988ccd11512034946a9667846952a6`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerdigest\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitbranch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[c][t] Specify branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gitbranch\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerimage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architectures": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[C] architectures specifies a list of architectures to check container images for (conditions only)"
                                        },
                                        "architecture": {
                                            "type": "string",
                                            "description": "[S][C] architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[S][C] image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C] tag specifies the container image tag such as `latest`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] versionfilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tagfilter": {
                                            "type": "string",
                                            "description": "[S] tagfilter allows to restrict tags retrieved from a remote registry by using a regular expression."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "helmchart"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[target] Defines the Helm Chart file to update."
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[target] Defines the key to update within the file."
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "[target] Defines the Chart name path like 'stable/chart'."
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the chart location URL."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[target] Defines the value to set for a key"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the Chart version, default value set based on a source input value"
                                        },
                                        "versionincrement": {
                                            "type": "string",
                                            "description": "[target] Defines if a Chart changes, triggers, or not, a Chart version update, accepted values is a comma separated list of \"none,major,minor,patch\""
                                        },
                                        "appversion": {
                                            "type": "boolean",
                                            "description": "[target] Enable AppVersion update based in source input."
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like 'regex', 'semver', or just 'latest'."
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an \"helmchart\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "maven"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Deprecated, please specify the Maven url in the repository"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Specifies the maven repository url + name"
                                        },
                                        "repositories": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Repositories specifies a list of Maven repository where to look for version. Order matter, version is retrieve from the first repository with the last one being Maven Central."
                                        },
                                        "groupid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact groupID"
                                        },
                                        "artifactid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact artifactID"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"maven\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "csv"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the csv file"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv query"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv value, default to source output"
                                        },
                                        "comma": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv separator character, default \",\""
                                        },
                                        "comment": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv comment character, default \"#\""
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerfile"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File specifies the dockerimage file such as Dockerfile"
                                        },
                                        "instruction": {
                                            "description": "Instruction specifies a DockerImage instruction such as ENV"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Value specifies the value for a specified Dockerfile instruction."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerfile\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the GitLab tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "toml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the toml file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the query to retrieve an information from a toml file"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific key. Default to source output"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gittag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Message associated to the git tag"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "Key of the tag object to retrieve, default is tag \"name\" filters are always against tag name, this only controls the output; Current options are 'name' and 'hash'."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Version defines a specific golang version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"Golang\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "failwhen": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        }
                    ]
                }
            },
            "type": "object",
            "description": "Conditions defines the list of condition configuration"
        },
        "targets": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] owner specifies the repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T] repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] versionfilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] title defines the Gitea release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] tag defines the Gitea release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] commitish defines the commit-ish such as `main`"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "[T] description defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the GitLab tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang/module"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "proxy": {
                                            "type": "string",
                                            "description": "Proxy may have the schemes https, http. file is not supported at this time. If a URL has no scheme, https is assumed\n[S][C] Proxy allows to override GO proxy similarly to GOPROXY environment variable."
                                        },
                                        "module": {
                                            "type": "string",
                                            "description": "[S][C] Module specifies the name of the module"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Defines a specific package version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "module"
                                    ],
                                    "description": "Spec defines a specification for a \"gomodule\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "npm"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "name": {
                                            "type": "string",
                                            "description": "Defines the specific npm package name"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Defines a specific package version"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "URL defines the registry url (defaults to `https://registry.npmjs.org/`)"
                                        },
                                        "registrytoken": {
                                            "type": "string",
                                            "description": "RegistryToken defines the token to use when connection to the registry"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "npmrcpath": {
                                            "type": "string",
                                            "description": "NpmrcPath defines the path to the .npmrc file"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an Npm package parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "csv"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the csv file"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv query"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv value, default to source output"
                                        },
                                        "comma": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv separator character, default \",\""
                                        },
                                        "comment": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv comment character, default \"#\""
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerfile"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File specifies the dockerimage file such as Dockerfile"
                                        },
                                        "instruction": {
                                            "description": "Instruction specifies a DockerImage instruction such as ENV"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Value specifies the value for a specified Dockerfile instruction."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerfile\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "file"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File contains the file path(s) to take in account and is incompatible with Files"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Files contains the file path(s) to take in account and is incompatible with File"
                                        },
                                        "line": {
                                            "type": "integer",
                                            "description": "Line contains the line of the file(s) to take in account"
                                        },
                                        "content": {
                                            "type": "string",
                                            "description": "Content specifies the content to take in account instead of the file content"
                                        },
                                        "forcecreate": {
                                            "type": "boolean",
                                            "description": "ForceCreate specifies if nonexistent file(s) should be created if they are targets"
                                        },
                                        "matchpattern": {
                                            "type": "string",
                                            "description": "MatchPattern specifies the regexp pattern to match on the file(s)"
                                        },
                                        "replacepattern": {
                                            "type": "string",
                                            "description": "ReplacePattern specifies the regexp replace pattern to apply on the file(s) content"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"file\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "xml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File defines the xml path to interact with"
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path defines the xmlPAth used for doing the query"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific Path. Default value fetch from source input"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitbranch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[c][t] Specify branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gitbranch\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "maven"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Deprecated, please specify the Maven url in the repository"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Specifies the maven repository url + name"
                                        },
                                        "repositories": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Repositories specifies a list of Maven repository where to look for version. Order matter, version is retrieve from the first repository with the last one being Maven Central."
                                        },
                                        "groupid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact groupID"
                                        },
                                        "artifactid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact artifactID"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"maven\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "toml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the toml file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the query to retrieve an information from a toml file"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific key. Default to source output"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "jenkins"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "release": {
                                            "type": "string",
                                            "description": "[s][c] Defines the release name. It accepts \"stable\" or \"weekly\""
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[s][c] Defines a specific release version (condition only)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"jenkins\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "stash/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Bitbucket enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Bitbucket API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Bitbucket release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "shell"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "command": {
                                            "type": "string",
                                            "description": "command specifies the shell command to execute by Updatecli"
                                        },
                                        "environments": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name defines the environment variable name"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "Value defines the environment variable value"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "name"
                                                ],
                                                "description": "Environment is a struct containing information for an environment variable such as its name and its value"
                                            },
                                            "type": "array",
                                            "description": "environments allows to pass environment variable(s) to the shell script. By default no environment variable are shared."
                                        },
                                        "changedif": {
                                            "oneOf": [
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "console/output"
                                                            ]
                                                        },
                                                        "spec": true
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "exitcode"
                                                            ]
                                                        },
                                                        "spec": {
                                                            "$schema": "http://json-schema.org/draft-04/schema",
                                                            "properties": {
                                                                "warning": {
                                                                    "type": "integer",
                                                                    "description": "Warning defines the command exit code used by Updatecli to identify a change need. Default to 2 if no exitcode have been specified"
                                                                },
                                                                "success": {
                                                                    "type": "integer",
                                                                    "description": "Success defines the command exit code used by Updatecli to identify no changes are needed. Default to 0 if no exitcode have been specified"
                                                                },
                                                                "failure": {
                                                                    "type": "integer",
                                                                    "description": "Failure defines the command exit code used by Updatecli to identify that something went wrong. Default to 1 if no exitcode have been specified"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "type": "object",
                                                            "required": [
                                                                "warning",
                                                                "success",
                                                                "failure"
                                                            ]
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                },
                                                {
                                                    "$schema": "http://json-schema.org/draft-04/schema",
                                                    "properties": {
                                                        "kind": {
                                                            "enum": [
                                                                "file/checksum"
                                                            ]
                                                        },
                                                        "spec": {
                                                            "$schema": "http://json-schema.org/draft-04/schema",
                                                            "properties": {
                                                                "files": {
                                                                    "items": {
                                                                        "type": "string"
                                                                    },
                                                                    "type": "array",
                                                                    "description": "Files specifies the list of file that Updatecli monitors to identify state change"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "type": "object",
                                                            "required": [
                                                                "files"
                                                            ]
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object"
                                                }
                                            ],
                                            "description": "ChangedIf defines how to interpreted shell command success criteria. What a success means, what an error means, and what a warning would mean"
                                        },
                                        "shell": {
                                            "type": "string",
                                            "description": "Shell specifies which shell interpreter to use. Default to powershell(Windows) and \"/bin/sh\" (Darwin/Linux)"
                                        },
                                        "workdir": {
                                            "type": "string",
                                            "description": "workdir specifies the working directory path from where to execute the command. It defaults to the current context path (scm or current shell). Updatecli join the current path and the one specified in parameter if the parameter one contains a relative path."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "command"
                                    ],
                                    "description": "Spec defines a specification for a \"shell\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "aws/ami"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "accesskey": {
                                            "type": "string",
                                            "description": "accesskey specifies the aws access key which combined with `secretkey`, is one of the way to authenticate"
                                        },
                                        "secretkey": {
                                            "type": "string",
                                            "description": "secretkey specifies the aws secret key which combined with `accesskey`, is one of the way to authenticate"
                                        },
                                        "filters": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name specifies a filter name."
                                                    },
                                                    "values": {
                                                        "type": "string",
                                                        "description": "Values specifies a filter value for a specific filter name."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Filter represents the updatecli configuration describing AMI filters."
                                            },
                                            "type": "array",
                                            "description": "Filters specifies a list of AMI filters"
                                        },
                                        "region": {
                                            "type": "string",
                                            "description": "Region specifies the AWS region to use when looking for AMI"
                                        },
                                        "endpoint": {
                                            "type": "string",
                                            "description": "Endpoint specifies the AWS endpoint to use when looking for AMI"
                                        },
                                        "dryrun": {
                                            "type": "boolean",
                                            "description": "Dryrun allows to Check whether you have the required permissions for the action."
                                        },
                                        "sortby": {
                                            "type": "string",
                                            "description": "Sortby specifies the order of AMI-ID that will be used to retrieve the last element such as `creationdateasc`"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec contains the updatecli configuration provided by users."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gittag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Message associated to the git tag"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "Key of the tag object to retrieve, default is tag \"name\" filters are always against tag name, this only controls the output; Current options are 'name' and 'hash'."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "json"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the Json file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipulate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the Jsonpath key to manipulate"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the Jsonpath key to manipulate. Default to source output"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the Gitea url to interact with"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" specifies the credential used to authenticate with Gitea API"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Gitea tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang/gomod"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File defines the go.mod file, default to \"go.mod\""
                                        },
                                        "module": {
                                            "type": "string",
                                            "description": "Module defines the module path"
                                        },
                                        "indirect": {
                                            "type": "boolean",
                                            "description": "Indirect specifies if we manipulate an indirect dependency"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Version Defines a specific golang version"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"Golang\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "helmchart"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[target] Defines the Helm Chart file to update."
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[target] Defines the key to update within the file."
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "[target] Defines the Chart name path like 'stable/chart'."
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the chart location URL."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[target] Defines the value to set for a key"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the Chart version, default value set based on a source input value"
                                        },
                                        "versionincrement": {
                                            "type": "string",
                                            "description": "[target] Defines if a Chart changes, triggers, or not, a Chart version update, accepted values is a comma separated list of \"none,major,minor,patch\""
                                        },
                                        "appversion": {
                                            "type": "boolean",
                                            "description": "[target] Enable AppVersion update based in source input."
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like 'regex', 'semver', or just 'latest'."
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an \"helmchart\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "yaml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "\"file\" defines the yaml file path to interact with.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* \"file\" and \"files\" are mutually exclusive\n\t\t\t* when used as a source or condition, the file path also accept the following protocols\n\t\t\t* protocols \"https://\", \"http://\", and \"file://\" are supported in path for source and condition"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "\"files\" defines the list of yaml files path to interact with.\n\n\t\tcompatible:\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* file and files are mutually exclusive\n\t\t\t* protocols \"https://\", \"http://\", and \"file://\" are supported in file path for source and condition"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "\"key\" defines the yaml keypath.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tremark:\n\t\t\t* key is a simpler version of yamlpath accepts keys.\n\n\t\texample:\n\t\t\t* key: $.name\n\t\t\t* key: $.agent.name\n\t\t\t* key: $.agents[0].name\n\t\t\t* key: $.agents[*].name\n\t\t\t* key: $.'agents.name'\n\n\t\tremark:\n\t\t\tfield path with key/value is not supported at the moment.\n\t\t\tsome help would be useful on https://github.com/goccy/go-yaml/issues/290"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "\"value\" is the value associated with a yaml key.\n\n\t\tcompatible:\n\t\t\t* source\n\t\t\t* condition\n\t\t\t* target\n\n\t\tdefault:\n\t\t\tWhen used from a condition or a target, the default value is set to linked source output."
                                        },
                                        "keyonly": {
                                            "type": "boolean",
                                            "description": "\"keyonly\" allows to only check if a key exist and do not return an error otherwise\n\n\t\tcompatible:\n\t\t\t* condition\n\n\t\tdefault:\n\t\t\tfalse"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "\"yaml\" defines the specification for manipulating \"yaml\" files."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "cargopackage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "registry": {
                                            "properties": {
                                                "auth": {
                                                    "properties": {
                                                        "token": {
                                                            "type": "string",
                                                            "description": "[A][S][C] Token specifies the cargo registry token to use for authentication."
                                                        },
                                                        "headerformat": {
                                                            "type": "string",
                                                            "description": "[A][S][C] HeaderFormat specifies the cargo registry header format to use for authentication (defaults to `Bearer`)."
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "[A][S][C] Auth specifies the cargo registry auth to use for authentication."
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "description": "[A][S][C] URL specifies the cargo registry URL to use for authentication."
                                                },
                                                "rootdir": {
                                                    "type": "string",
                                                    "description": "[A][S][C] RootDir specifies the cargo registry root directory to use as FS index."
                                                },
                                                "scmid": {
                                                    "type": "string",
                                                    "description": "[A] SCMID specifies the cargo registry scmId to use as FS index."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] Registry specifies the registry to use"
                                        },
                                        "package": {
                                            "type": "string",
                                            "description": "[S][C] Package specifies the name of the package"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Defines a specific package version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "package"
                                    ],
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerdigest"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[s][c] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[s][c] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[s] Tag specifies the container image tag such as `latest`"
                                        },
                                        "digest": {
                                            "type": "string",
                                            "description": "[c] Digest specifies the container image digest such as `@sha256:ce782db15ab5491c6c6178da8431b3db66988ccd11512034946a9667846952a6`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerdigest\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerimage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architectures": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[C] architectures specifies a list of architectures to check container images for (conditions only)"
                                        },
                                        "architecture": {
                                            "type": "string",
                                            "description": "[S][C] architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[S][C] image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C] tag specifies the container image tag such as `latest`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] versionfilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tagfilter": {
                                            "type": "string",
                                            "description": "[S] tagfilter allows to restrict tags retrieved from a remote registry by using a regular expression."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "stash/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Bitbucket enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Bitbucket API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Bitbucket tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Bitbucket release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitlab/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "\"url\" defines the GitLab url to interact with\n\n\t\tdefault:\n\t\t\turl defaults to \"gitlab.com\""
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "\"username\" defines the username used to authenticate with GitLab"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "\"token\" defines the credential used to authenticate with GitLab"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T]Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] Title defines the GitLab release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag defines the GitLab release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] Commitish defines the commit-ish such as `main`"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "[T] Description defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] Draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] Prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with GitLab release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "githubrelease"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "owner": {
                                            "type": "string",
                                            "description": "[s][c] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[s][c] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[s][c] Token specifies the credential used to authenticate with"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[s][c] URL specifies the default github url in case of GitHub enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[s][c] Username specifies the username used to authenticate with GitHub API"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "typefilter": {
                                            "properties": {
                                                "draft": {
                                                    "type": "boolean",
                                                    "description": "\"Draft\" enable/disable GitHub draft release"
                                                },
                                                "prerelease": {
                                                    "type": "boolean",
                                                    "description": "\"PreRelease\" enable/disable GitHub PreRelease"
                                                },
                                                "release": {
                                                    "type": "boolean",
                                                    "description": "\"Release\" enable/disable GitHub release"
                                                },
                                                "latest": {
                                                    "type": "boolean",
                                                    "description": "\"Latest\" if set to true will only filter the release flag as latest."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] TypeFilter specifies the GitHub Release type to retrieve before applying the versionfilter rule"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[c] Tag allows to check for a specific release tag, default to source output"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "owner",
                                        "repository",
                                        "token"
                                    ],
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "golang"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "required": [
                                                        "from",
                                                        "to"
                                                    ],
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "from",
                                                    "to"
                                                ],
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "pattern"
                                                ],
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a transformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "version": {
                                            "type": "string",
                                            "description": "[C] Version defines a specific golang version"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"Golang\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        }
                    ]
                }
            },
            "type": "object",
            "description": "Targets defines the list of target configuration"
        },
        "version": {
            "type": "string",
            "description": "Version specifies the minimum updatecli version compatible with the manifest"
        }
    },
    "additionalProperties": false,
    "type": "object",
    "required": [
        "name"
    ],
    "description": "Spec contains pipeline configuration"
}