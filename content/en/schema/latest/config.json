{
    "$schema": "http://json-schema.org/draft-04/schema",
    "$id": "https://www.updatecli.io/latest/schema/spec",
    "properties": {
        "name": {
            "type": "string",
            "description": "Name defines a pipeline name"
        },
        "pipelineid": {
            "type": "string",
            "description": "PipelineID allows to identify a full pipeline run, this value is propagated into each target if not defined at that level"
        },
        "autodiscovery": {
            "properties": {
                "crawlers": {
                    "type": "object",
                    "description": "Crawlers specifies crawler configuration"
                },
                "scmid": {
                    "type": "string",
                    "description": "ScmID specifies a scmid configuration to use to generate the manifest"
                },
                "pullrequestid": {
                    "type": "string",
                    "description": "PullrequestID specifies a pullrequest configuration to use to generate the manifest"
                },
                "groupby": {
                    "type": "string",
                    "description": "GroupBy specifies how to group pipeline. The Accepted is one of \"all\", \"individual\""
                }
            },
            "additionalProperties": false,
            "type": "object",
            "description": "AutoDiscovery defines parameters to the autodiscover feature"
        },
        "title": {
            "type": "string",
            "description": "Title is used for the full pipeline"
        },
        "pullrequests": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "kind": {
                                    "enum": [
                                        "github"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "automerge": {
                                            "type": "boolean",
                                            "description": "Specifies if automerge is enabled for the new pullrequest"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Specifies pull request title"
                                        },
                                        "description": {
                                            "type": "string",
                                            "description": "Specifies user input description used during pull body creation"
                                        },
                                        "labels": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Specifies repository labels used for pull request. !! Labels must already exist on the repository"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "Specifies if a pull request is set to draft, default false"
                                        },
                                        "maintainercannotmodify": {
                                            "type": "boolean",
                                            "description": "Specifies if maintainer can modify pullRequest"
                                        },
                                        "mergemethod": {
                                            "type": "string",
                                            "description": "Specifies which merge method is used to incorporate the pull request. Accept \"merge\", \"squash\", \"rebase\", or \"\""
                                        },
                                        "usetitleforautomerge": {
                                            "type": "boolean",
                                            "description": "Specifies to use pull request title when using auto merge, only works for \"squash\" or \"rebase\""
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "PullRequestSpec is a specific struct containing pullrequest settings provided by an updatecli configuration"
                                },
                                "scmid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "title": {
                                    "type": "string"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "sourcebranch": {
                                            "type": "string",
                                            "description": "SourceBranch specifies the pullrequest source branch"
                                        },
                                        "targetbranch": {
                                            "type": "string",
                                            "description": "TargetBranch specifies the pullrequest target branch"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Repository specifies the name of a repository for a specific owner"
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "Title defines the Gitea pullrequest title."
                                        },
                                        "body": {
                                            "type": "string",
                                            "description": "Body defines the Gitea pullrequest body"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea pullrequest It's a mapping of user input from a Updatecli manifest and it shouldn't modified"
                                },
                                "scmid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        }
                    ]
                }
            },
            "type": "object",
            "description": "PullRequests defines the list of Pull Request configuration which need to be managed"
        },
        "scms": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "kind": {
                                    "enum": [
                                        "git"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "URL specifies the git url"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "Username specifies the username for http authentication"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "Password specifies the password for http authentication"
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "Branch specifies the git branch"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "User specifies the git commit author"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email specifies the git commit email"
                                        },
                                        "directory": {
                                            "type": "string",
                                            "description": "Directory specifies the directory to use for cloning the repository"
                                        },
                                        "force": {
                                            "type": "boolean",
                                            "description": "Force is used during the git push phase to run `git push --force`."
                                        },
                                        "commitmessage": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Define commit type, like chore, fix, etc"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "description": "Define commit type scope"
                                                },
                                                "footers": {
                                                    "type": "string",
                                                    "description": "Define commit footer"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Define commit title"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "description": "Define commit body"
                                                },
                                                "hidecredit": {
                                                    "type": "boolean",
                                                    "description": "Display updatecli credits inside commit message body"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "CommitMessage contains conventional commit metadata as type or scope, used to generate the final commit message."
                                        },
                                        "gpg": {
                                            "properties": {
                                                "signingkey": {
                                                    "type": "string",
                                                    "description": "Defines the gpg key"
                                                },
                                                "passphrase": {
                                                    "type": "string",
                                                    "description": "Define the gpg passphrase"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "GPG key and passphrased used for commit signing"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url"
                                    ],
                                    "description": "Spec contains settings to manipulate a git repository."
                                },
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "kind": {
                                    "enum": [
                                        "github"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "branch": {
                                            "type": "string",
                                            "description": "Branch specifies which github branch to work on"
                                        },
                                        "directory": {
                                            "type": "string",
                                            "description": "Directory specifies where the github repository is cloned on the local disk"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email specifies which emails to use when creating commits"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Repository specifies the name of a repository for a specific owner"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "Token specifies the credential used to authenticate with"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "URL specifies the default github url in case of GitHub enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "Username specifies the username used to authenticate with Github API"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "User specifies the user of the git commit messages"
                                        },
                                        "gpg": {
                                            "properties": {
                                                "signingkey": {
                                                    "type": "string",
                                                    "description": "Defines the gpg key"
                                                },
                                                "passphrase": {
                                                    "type": "string",
                                                    "description": "Define the gpg passphrase"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "GPG key and passphrased used for commit signing"
                                        },
                                        "force": {
                                            "type": "boolean",
                                            "description": "Force is used during the git push phase to run `git push --force`."
                                        },
                                        "commitmessage": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Define commit type, like chore, fix, etc"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "description": "Define commit type scope"
                                                },
                                                "footers": {
                                                    "type": "string",
                                                    "description": "Define commit footer"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Define commit title"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "description": "Define commit body"
                                                },
                                                "hidecredit": {
                                                    "type": "boolean",
                                                    "description": "Display updatecli credits inside commit message body"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "CommitMessage represents conventional commit metadata as type or scope, used to generate the final commit message."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "owner",
                                        "repository",
                                        "token"
                                    ],
                                    "description": "Spec represents the configuration input"
                                },
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "kind": {
                                    "enum": [
                                        "gitea"
                                    ]
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "commitmessage": {
                                            "properties": {
                                                "type": {
                                                    "type": "string",
                                                    "description": "Define commit type, like chore, fix, etc"
                                                },
                                                "scope": {
                                                    "type": "string",
                                                    "description": "Define commit type scope"
                                                },
                                                "footers": {
                                                    "type": "string",
                                                    "description": "Define commit footer"
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "description": "Define commit title"
                                                },
                                                "body": {
                                                    "type": "string",
                                                    "description": "Define commit body"
                                                },
                                                "hidecredit": {
                                                    "type": "boolean",
                                                    "description": "Display updatecli credits inside commit message body"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "CommitMessage represents conventional commit metadata as type or scope, used to generate the final commit message."
                                        },
                                        "directory": {
                                            "type": "string",
                                            "description": "Directory specifies where the github repository is cloned on the local disk"
                                        },
                                        "email": {
                                            "type": "string",
                                            "description": "Email specifies which emails to use when creating commits"
                                        },
                                        "force": {
                                            "type": "boolean",
                                            "description": "Force is used during the git push phase to run `git push --force`."
                                        },
                                        "gpg": {
                                            "properties": {
                                                "signingkey": {
                                                    "type": "string",
                                                    "description": "Defines the gpg key"
                                                },
                                                "passphrase": {
                                                    "type": "string",
                                                    "description": "Define the gpg passphrase"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "GPG key and passphrased used for commit signing"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Repository specifies the name of a repository for a specific owner"
                                        },
                                        "user": {
                                            "type": "string",
                                            "description": "User specifies the user of the git commit messages"
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "Branch specifies which Gitea repository branch to work on"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "disabled": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object"
                        }
                    ]
                }
            },
            "type": "object",
            "description": "SCMs defines the list of repository configuration used to fetch content from."
        },
        "sources": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "shell"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "command": {
                                            "type": "string",
                                            "description": "Specifies the shell command"
                                        },
                                        "environments": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name defines the environment variable name"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "Value defines the environment variable value"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "name"
                                                ],
                                                "description": "Environment is a struct containing information for an environment variable such as its name and its value"
                                            },
                                            "type": "array",
                                            "description": "Environments allows to pass environment variable(s) to the shell script"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "command"
                                    ],
                                    "description": "Spec defines a specification for a \"shell\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerfile"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File specifies the dockerimage file such as Dockerfile"
                                        },
                                        "instruction": {
                                            "description": "Instruction specifies a DockerImage instruction such as ENV"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Value specifies the value for a specified Dockerfile instruction."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerfile\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Gitea tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "helmchart"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[target] Defines the Helm Chart file to update."
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[target] Defines the key within the file that need to be updated."
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "[target] Defines the Chart name path like \"stable/chart\"."
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the chart location URL."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[target] Defines the value to set for a key"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the Chart version, default value set based on sourceinput value"
                                        },
                                        "versionincrement": {
                                            "type": "string",
                                            "description": "[target] Defines if a Chart changes, triggers (or not) a Chart version update, accepted values is a comma separated list of \"none,major,minor,patch\""
                                        },
                                        "appversion": {
                                            "type": "boolean",
                                            "description": "[target] Defines if AppVersion must be updated as well"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an \"helmchart\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "json"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the Json file to manipuate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the Jsonpath key to manipuate"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the Jsonpath key to manipuate. Default to source output"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gittag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Message associated to the git tag"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "githubrelease"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "owner": {
                                            "type": "string",
                                            "description": "[s][c] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[s][c] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[s][c] Token specifies the credential used to authenticate with"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[s][c] URL specifies the default github url in case of GitHub enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[s][c] Username specifies the username used to authenticate with Github API"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "typefilter": {
                                            "properties": {
                                                "draft": {
                                                    "type": "boolean",
                                                    "description": "\"Draft\" enable/disable GitHub draft release"
                                                },
                                                "prerelease": {
                                                    "type": "boolean",
                                                    "description": "\"PreRelease\" enable/disable GitHub PreRelease"
                                                },
                                                "release": {
                                                    "type": "boolean",
                                                    "description": "\"Release\" enable/disable GitHub release"
                                                },
                                                "latest": {
                                                    "type": "boolean",
                                                    "description": "\"Latest\" if set to true will only filter the release flag as latest."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] TypeFilter specifies the Github Release type to retrieve before applying the versionfilter rule"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[c] Tag allows to check for a specific release tag, default to source output"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "owner",
                                        "repository",
                                        "token",
                                        "username"
                                    ],
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "jenkins"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "release": {
                                            "type": "string",
                                            "description": "Defines the release name like latest or weekly"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Defines a specific release version (condition only)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"jenkins\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "maven"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Deprecated, please specify the Maven url in the repository"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Specifies the maven repository url + name"
                                        },
                                        "repositories": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Repositories specifies a list of Maven repository where to look for version. Order matter, version is retrieve from the first repository with the last one being Maven Central."
                                        },
                                        "groupid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact groupID"
                                        },
                                        "artifactid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact artifactID"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact version"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"maven\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "toml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the toml file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the query to retrieve an information from a toml file"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific key. Default to source output"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "xml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File defines the xml path to interact with"
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path defines the xmlPAth used for doing the query"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific Path. Default value fetch from source input"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "aws/ami"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "accesskey": {
                                            "type": "string",
                                            "description": "accesskey specifies the aws access key which combined with `secretkey`, is one of the way to authenticate"
                                        },
                                        "secretkey": {
                                            "type": "string",
                                            "description": "secretkey specifies the aws secret key which combined with `accesskey`, is one of the way to authenticate"
                                        },
                                        "filters": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name specifies a filter name."
                                                    },
                                                    "values": {
                                                        "type": "string",
                                                        "description": "Values specifies a filter value for a specific filter name."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Filter represents the updatecli configuration describing AMI filters."
                                            },
                                            "type": "array",
                                            "description": "Filters specifies a list of AMI filters"
                                        },
                                        "region": {
                                            "type": "string",
                                            "description": "Region specifies the AWS region to use when looking for AMI"
                                        },
                                        "endpoint": {
                                            "type": "string",
                                            "description": "Endpoint specifies the AWS endpoin to use when looking for AMI"
                                        },
                                        "dryrun": {
                                            "type": "boolean",
                                            "description": "Dryrun allows to Check whether you have the required permissions for the action."
                                        },
                                        "sortby": {
                                            "type": "string",
                                            "description": "Sortby specifies the order of AMI-ID that will be used to retrieve the last element such as `creationdateasc`"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec contains the updatecli configuration provided by users."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerimage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[S][C][T] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "architectures": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[C] Architectures specifies a list of architectures to check container images for (conditions only)"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[S][C][T] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag specifies the container image tag such as `latest`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "file"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File contains the file path(s) to take in account and is incompatible with Files"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Files contains the file path(s) to take in account and is incompatible with File"
                                        },
                                        "line": {
                                            "type": "integer",
                                            "description": "Line contains the line of the file(s) to take in account"
                                        },
                                        "content": {
                                            "type": "string",
                                            "description": "Content specifies the content to take in account instead of the file content"
                                        },
                                        "forcecreate": {
                                            "type": "boolean",
                                            "description": "ForceCreate specifies if non existing file(s) should be created if they are targets"
                                        },
                                        "matchpattern": {
                                            "type": "string",
                                            "description": "MatchPattern specifies the regexp pattern to match on the file(s)"
                                        },
                                        "replacepattern": {
                                            "type": "string",
                                            "description": "ReplacePattern specifies the regexp replace pattern to apply on the file(s) content"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"file\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "csv"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the csv file"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv query"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv value, default to source output"
                                        },
                                        "comma": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv separator character, default \",\""
                                        },
                                        "comment": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv comment character, default \"#\""
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerdigest"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[s][c] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[s][c] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[s] Tag specifies the container image tag such as `latest`"
                                        },
                                        "digest": {
                                            "type": "string",
                                            "description": "[c] Digest specifies the container image digest such as `@sha256:ce782db15ab5491c6c6178da8431b3db66988ccd11512034946a9667846952a6`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerdigest\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T]Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] Title defines the Gitea release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag defines the Gitea release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] Commitish defines the commit-ish such as `main`"
                                        },
                                        "drescription": {
                                            "type": "string",
                                            "description": "[T] Drescription defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] Draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] Prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "yaml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "Specifies the YAML file"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "Specifies the YAML key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Specifies the YAML value"
                                        },
                                        "keyonly": {
                                            "type": "boolean",
                                            "description": "[condition] allow checking for only the existence of a key (not its value)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"yaml\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        }
                    ]
                }
            },
            "type": "object",
            "description": "Sources defines the list of source configuration"
        },
        "conditions": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "maven"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Deprecated, please specify the Maven url in the repository"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Specifies the maven repository url + name"
                                        },
                                        "repositories": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Repositories specifies a list of Maven repository where to look for version. Order matter, version is retrieve from the first repository with the last one being Maven Central."
                                        },
                                        "groupid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact groupID"
                                        },
                                        "artifactid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact artifactID"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact version"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"maven\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "shell"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "command": {
                                            "type": "string",
                                            "description": "Specifies the shell command"
                                        },
                                        "environments": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name defines the environment variable name"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "Value defines the environment variable value"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "name"
                                                ],
                                                "description": "Environment is a struct containing information for an environment variable such as its name and its value"
                                            },
                                            "type": "array",
                                            "description": "Environments allows to pass environment variable(s) to the shell script"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "command"
                                    ],
                                    "description": "Spec defines a specification for a \"shell\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "aws/ami"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "accesskey": {
                                            "type": "string",
                                            "description": "accesskey specifies the aws access key which combined with `secretkey`, is one of the way to authenticate"
                                        },
                                        "secretkey": {
                                            "type": "string",
                                            "description": "secretkey specifies the aws secret key which combined with `accesskey`, is one of the way to authenticate"
                                        },
                                        "filters": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name specifies a filter name."
                                                    },
                                                    "values": {
                                                        "type": "string",
                                                        "description": "Values specifies a filter value for a specific filter name."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Filter represents the updatecli configuration describing AMI filters."
                                            },
                                            "type": "array",
                                            "description": "Filters specifies a list of AMI filters"
                                        },
                                        "region": {
                                            "type": "string",
                                            "description": "Region specifies the AWS region to use when looking for AMI"
                                        },
                                        "endpoint": {
                                            "type": "string",
                                            "description": "Endpoint specifies the AWS endpoin to use when looking for AMI"
                                        },
                                        "dryrun": {
                                            "type": "boolean",
                                            "description": "Dryrun allows to Check whether you have the required permissions for the action."
                                        },
                                        "sortby": {
                                            "type": "string",
                                            "description": "Sortby specifies the order of AMI-ID that will be used to retrieve the last element such as `creationdateasc`"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec contains the updatecli configuration provided by users."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gittag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Message associated to the git tag"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T]Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] Title defines the Gitea release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag defines the Gitea release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] Commitish defines the commit-ish such as `main`"
                                        },
                                        "drescription": {
                                            "type": "string",
                                            "description": "[T] Drescription defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] Draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] Prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "jenkins"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "release": {
                                            "type": "string",
                                            "description": "Defines the release name like latest or weekly"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Defines a specific release version (condition only)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"jenkins\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "toml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the toml file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the query to retrieve an information from a toml file"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific key. Default to source output"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "xml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File defines the xml path to interact with"
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path defines the xmlPAth used for doing the query"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific Path. Default value fetch from source input"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerfile"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File specifies the dockerimage file such as Dockerfile"
                                        },
                                        "instruction": {
                                            "description": "Instruction specifies a DockerImage instruction such as ENV"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Value specifies the value for a specified Dockerfile instruction."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerfile\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "githubrelease"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "owner": {
                                            "type": "string",
                                            "description": "[s][c] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[s][c] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[s][c] Token specifies the credential used to authenticate with"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[s][c] URL specifies the default github url in case of GitHub enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[s][c] Username specifies the username used to authenticate with Github API"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "typefilter": {
                                            "properties": {
                                                "draft": {
                                                    "type": "boolean",
                                                    "description": "\"Draft\" enable/disable GitHub draft release"
                                                },
                                                "prerelease": {
                                                    "type": "boolean",
                                                    "description": "\"PreRelease\" enable/disable GitHub PreRelease"
                                                },
                                                "release": {
                                                    "type": "boolean",
                                                    "description": "\"Release\" enable/disable GitHub release"
                                                },
                                                "latest": {
                                                    "type": "boolean",
                                                    "description": "\"Latest\" if set to true will only filter the release flag as latest."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] TypeFilter specifies the Github Release type to retrieve before applying the versionfilter rule"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[c] Tag allows to check for a specific release tag, default to source output"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "owner",
                                        "repository",
                                        "token",
                                        "username"
                                    ],
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "helmchart"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[target] Defines the Helm Chart file to update."
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[target] Defines the key within the file that need to be updated."
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "[target] Defines the Chart name path like \"stable/chart\"."
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the chart location URL."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[target] Defines the value to set for a key"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the Chart version, default value set based on sourceinput value"
                                        },
                                        "versionincrement": {
                                            "type": "string",
                                            "description": "[target] Defines if a Chart changes, triggers (or not) a Chart version update, accepted values is a comma separated list of \"none,major,minor,patch\""
                                        },
                                        "appversion": {
                                            "type": "boolean",
                                            "description": "[target] Defines if AppVersion must be updated as well"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an \"helmchart\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "yaml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "Specifies the YAML file"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "Specifies the YAML key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Specifies the YAML value"
                                        },
                                        "keyonly": {
                                            "type": "boolean",
                                            "description": "[condition] allow checking for only the existence of a key (not its value)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"yaml\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "csv"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the csv file"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv query"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv value, default to source output"
                                        },
                                        "comma": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv separator character, default \",\""
                                        },
                                        "comment": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv comment character, default \"#\""
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerdigest"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[s][c] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[s][c] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[s] Tag specifies the container image tag such as `latest`"
                                        },
                                        "digest": {
                                            "type": "string",
                                            "description": "[c] Digest specifies the container image digest such as `@sha256:ce782db15ab5491c6c6178da8431b3db66988ccd11512034946a9667846952a6`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerdigest\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerimage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[S][C][T] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "architectures": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[C] Architectures specifies a list of architectures to check container images for (conditions only)"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[S][C][T] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag specifies the container image tag such as `latest`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "file"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File contains the file path(s) to take in account and is incompatible with Files"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Files contains the file path(s) to take in account and is incompatible with File"
                                        },
                                        "line": {
                                            "type": "integer",
                                            "description": "Line contains the line of the file(s) to take in account"
                                        },
                                        "content": {
                                            "type": "string",
                                            "description": "Content specifies the content to take in account instead of the file content"
                                        },
                                        "forcecreate": {
                                            "type": "boolean",
                                            "description": "ForceCreate specifies if non existing file(s) should be created if they are targets"
                                        },
                                        "matchpattern": {
                                            "type": "string",
                                            "description": "MatchPattern specifies the regexp pattern to match on the file(s)"
                                        },
                                        "replacepattern": {
                                            "type": "string",
                                            "description": "ReplacePattern specifies the regexp replace pattern to apply on the file(s) content"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"file\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Gitea tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "json"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the Json file to manipuate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the Jsonpath key to manipuate"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the Jsonpath key to manipuate. Default to source output"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "sourceid": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        }
                    ]
                }
            },
            "type": "object",
            "description": "Conditions defines the list of condition configuration"
        },
        "targets": {
            "patternProperties": {
                ".*": {
                    "oneOf": [
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/tag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S][C] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[S] Tag defines the Gitea tag ."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "helmchart"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[target] Defines the Helm Chart file to update."
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[target] Defines the key within the file that need to be updated."
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "[target] Defines the Chart name path like \"stable/chart\"."
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the chart location URL."
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[target] Defines the value to set for a key"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "[source,condition] Defines the Chart version, default value set based on sourceinput value"
                                        },
                                        "versionincrement": {
                                            "type": "string",
                                            "description": "[target] Defines if a Chart changes, triggers (or not) a Chart version update, accepted values is a comma separated list of \"none,major,minor,patch\""
                                        },
                                        "appversion": {
                                            "type": "boolean",
                                            "description": "[target] Defines if AppVersion must be updated as well"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for an \"helmchart\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "jenkins"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "release": {
                                            "type": "string",
                                            "description": "Defines the release name like latest or weekly"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Defines a specific release version (condition only)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"jenkins\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "shell"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "command": {
                                            "type": "string",
                                            "description": "Specifies the shell command"
                                        },
                                        "environments": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name defines the environment variable name"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "description": "Value defines the environment variable value"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "required": [
                                                    "name"
                                                ],
                                                "description": "Environment is a struct containing information for an environment variable such as its name and its value"
                                            },
                                            "type": "array",
                                            "description": "Environments allows to pass environment variable(s) to the shell script"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "command"
                                    ],
                                    "description": "Spec defines a specification for a \"shell\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "csv"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the csv file"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv query"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the csv value, default to source output"
                                        },
                                        "comma": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv separator character, default \",\""
                                        },
                                        "comment": {
                                            "type": "integer",
                                            "description": "[s][c][t] Comma specifies the csv comment character, default \"#\""
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "file"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File contains the file path(s) to take in account and is incompatible with Files"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Files contains the file path(s) to take in account and is incompatible with File"
                                        },
                                        "line": {
                                            "type": "integer",
                                            "description": "Line contains the line of the file(s) to take in account"
                                        },
                                        "content": {
                                            "type": "string",
                                            "description": "Content specifies the content to take in account instead of the file content"
                                        },
                                        "forcecreate": {
                                            "type": "boolean",
                                            "description": "ForceCreate specifies if non existing file(s) should be created if they are targets"
                                        },
                                        "matchpattern": {
                                            "type": "string",
                                            "description": "MatchPattern specifies the regexp pattern to match on the file(s)"
                                        },
                                        "replacepattern": {
                                            "type": "string",
                                            "description": "ReplacePattern specifies the regexp replace pattern to apply on the file(s) content"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"file\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/branch"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "branch": {
                                            "type": "string",
                                            "description": "[C] Branch specifies the branch name"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gitea/release"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "[S][C][T] URL specifies the default github url in case of Gitea enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the username used to authenticate with Gitea API"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the credential used to authenticate with"
                                        },
                                        "owner": {
                                            "type": "string",
                                            "description": "[S][C][T] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[S][C][T]Repository specifies the name of a repository for a specific owner"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "title": {
                                            "type": "string",
                                            "description": "[T] Title defines the Gitea release title."
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag defines the Gitea release tag."
                                        },
                                        "commitish": {
                                            "type": "string",
                                            "description": "[T] Commitish defines the commit-ish such as `main`"
                                        },
                                        "drescription": {
                                            "type": "string",
                                            "description": "[T] Drescription defines if the new release description"
                                        },
                                        "draft": {
                                            "type": "boolean",
                                            "description": "[T] Draft defines if the release is a draft release"
                                        },
                                        "prerelease": {
                                            "type": "boolean",
                                            "description": "[T] Prerelease defines if the release is a pre-release release"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "url",
                                        "owner",
                                        "repository"
                                    ],
                                    "description": "Spec defines settings used to interact with Gitea release"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "maven"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "url": {
                                            "type": "string",
                                            "description": "Deprecated, please specify the Maven url in the repository"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "Specifies the maven repository url + name"
                                        },
                                        "repositories": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "Repositories specifies a list of Maven repository where to look for version. Order matter, version is retrieve from the first repository with the last one being Maven Central."
                                        },
                                        "groupid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact groupID"
                                        },
                                        "artifactid": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact artifactID"
                                        },
                                        "version": {
                                            "type": "string",
                                            "description": "Specifies the maven artifact version"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"maven\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "toml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the toml file to manipulate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the query to retrieve an information from a toml file"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific key. Default to source output"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "aws/ami"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "accesskey": {
                                            "type": "string",
                                            "description": "accesskey specifies the aws access key which combined with `secretkey`, is one of the way to authenticate"
                                        },
                                        "secretkey": {
                                            "type": "string",
                                            "description": "secretkey specifies the aws secret key which combined with `accesskey`, is one of the way to authenticate"
                                        },
                                        "filters": {
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name specifies a filter name."
                                                    },
                                                    "values": {
                                                        "type": "string",
                                                        "description": "Values specifies a filter value for a specific filter name."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Filter represents the updatecli configuration describing AMI filters."
                                            },
                                            "type": "array",
                                            "description": "Filters specifies a list of AMI filters"
                                        },
                                        "region": {
                                            "type": "string",
                                            "description": "Region specifies the AWS region to use when looking for AMI"
                                        },
                                        "endpoint": {
                                            "type": "string",
                                            "description": "Endpoint specifies the AWS endpoin to use when looking for AMI"
                                        },
                                        "dryrun": {
                                            "type": "boolean",
                                            "description": "Dryrun allows to Check whether you have the required permissions for the action."
                                        },
                                        "sortby": {
                                            "type": "string",
                                            "description": "Sortby specifies the order of AMI-ID that will be used to retrieve the last element such as `creationdateasc`"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec contains the updatecli configuration provided by users."
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerimage"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[S][C][T] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "architectures": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[C] Architectures specifies a list of architectures to check container images for (conditions only)"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[S][C][T] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[C][T] Tag specifies the container image tag such as `latest`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[S] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerimage\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "gittag"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "path": {
                                            "type": "string",
                                            "description": "Path contains the git repository path"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "message": {
                                            "type": "string",
                                            "description": "Message associated to the git tag"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "xml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File defines the xml path to interact with"
                                        },
                                        "path": {
                                            "type": "string",
                                            "description": "[s][c][t] Path defines the xmlPAth used for doing the query"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the value for a specific Path. Default value fetch from source input"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerdigest"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "architecture": {
                                            "type": "string",
                                            "description": "[s][c] Architecture specifies the container image architecture such as `amd64`"
                                        },
                                        "image": {
                                            "type": "string",
                                            "description": "[s][c] Image specifies the container image such as `updatecli/updatecli`"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[s] Tag specifies the container image tag such as `latest`"
                                        },
                                        "digest": {
                                            "type": "string",
                                            "description": "[c] Digest specifies the container image digest such as `@sha256:ce782db15ab5491c6c6178da8431b3db66988ccd11512034946a9667846952a6`"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[S][C][T] Username specifies the container registry username to use for authentication. Not compatible with token"
                                        },
                                        "password": {
                                            "type": "string",
                                            "description": "[S][C][T] Password specifies the container registry password to use for authentication. Not compatible with token"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[S][C][T] Token specifies the container registry token to use for authentication. Not compatible with username/password"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerdigest\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "dockerfile"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "File specifies the dockerimage file such as Dockerfile"
                                        },
                                        "instruction": {
                                            "description": "Instruction specifies a DockerImage instruction such as ENV"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Value specifies the value for a specified Dockerfile instruction."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"dockerfile\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "githubrelease"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "owner": {
                                            "type": "string",
                                            "description": "[s][c] Owner specifies repository owner"
                                        },
                                        "repository": {
                                            "type": "string",
                                            "description": "[s][c] Repository specifies the name of a repository for a specific owner"
                                        },
                                        "token": {
                                            "type": "string",
                                            "description": "[s][c] Token specifies the credential used to authenticate with"
                                        },
                                        "url": {
                                            "type": "string",
                                            "description": "[s][c] URL specifies the default github url in case of GitHub enterprise"
                                        },
                                        "username": {
                                            "type": "string",
                                            "description": "[s][c] Username specifies the username used to authenticate with Github API"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        },
                                        "typefilter": {
                                            "properties": {
                                                "draft": {
                                                    "type": "boolean",
                                                    "description": "\"Draft\" enable/disable GitHub draft release"
                                                },
                                                "prerelease": {
                                                    "type": "boolean",
                                                    "description": "\"PreRelease\" enable/disable GitHub PreRelease"
                                                },
                                                "release": {
                                                    "type": "boolean",
                                                    "description": "\"Release\" enable/disable GitHub release"
                                                },
                                                "latest": {
                                                    "type": "boolean",
                                                    "description": "\"Latest\" if set to true will only filter the release flag as latest."
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s][c] TypeFilter specifies the Github Release type to retrieve before applying the versionfilter rule"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "[c] Tag allows to check for a specific release tag, default to source output"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "required": [
                                        "owner",
                                        "repository",
                                        "token",
                                        "username"
                                    ],
                                    "description": "Spec defines a specification for a \"gittag\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "json"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "[s][c][t] File specifies the Json file to manipuate"
                                        },
                                        "files": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array",
                                            "description": "[c][t] Files specifies a list of Json file to manipuate"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "[s][c][t] Key specifies the Jsonpath key to manipuate"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "[s][c][t] Value specifies the Jsonpath key to manipuate. Default to source output"
                                        },
                                        "query": {
                                            "type": "string",
                                            "description": "[s][c][t] Query allows to used advanced query. Override the parameter key"
                                        },
                                        "versionfilter": {
                                            "properties": {
                                                "kind": {
                                                    "type": "string",
                                                    "description": "Specifies the version kind such as semver, regex, or latest"
                                                },
                                                "pattern": {
                                                    "type": "string",
                                                    "description": "Specifies the version pattern according the version kind"
                                                },
                                                "strict": {
                                                    "type": "boolean",
                                                    "description": "Strict enforce strict versioning rule. Only used for semantic versioning at this time"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "type": "object",
                                            "description": "[s]VersionFilter provides parameters to specify version pattern and its type like regex, semver, or just latest."
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        },
                        {
                            "$schema": "http://json-schema.org/draft-04/schema",
                            "properties": {
                                "dependson": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "description": "dependson specifies which resources must be executed before the current one"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "name specifies the resource name"
                                },
                                "kind": {
                                    "enum": [
                                        "yaml"
                                    ]
                                },
                                "transformers": {
                                    "items": {
                                        "properties": {
                                            "addprefix": {
                                                "type": "string",
                                                "description": "AddPrefix adds a prefix to the transformer input value"
                                            },
                                            "addsuffix": {
                                                "type": "string",
                                                "description": "AddSuffix adds a suffix to the transformer input value"
                                            },
                                            "trimprefix": {
                                                "type": "string",
                                                "description": "TrimPrefix removes a prefix to the transformer input value"
                                            },
                                            "trimsuffix": {
                                                "type": "string",
                                                "description": "TrimSuffix removes the suffix from the transformer input value"
                                            },
                                            "replacers": {
                                                "items": {
                                                    "properties": {
                                                        "from": {
                                                            "type": "string",
                                                            "description": "From defines the source value which need to be replaced"
                                                        },
                                                        "to": {
                                                            "type": "string",
                                                            "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "type": "object",
                                                    "description": "Replacer is struct used to feed strings.Replacer"
                                                },
                                                "type": "array",
                                                "description": "Replacers specifies a list of replacer instruction"
                                            },
                                            "replacer": {
                                                "properties": {
                                                    "from": {
                                                        "type": "string",
                                                        "description": "From defines the source value which need to be replaced"
                                                    },
                                                    "to": {
                                                        "type": "string",
                                                        "description": "To defines the \"to what\" a \"from\" value needs to be replaced"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Replacer specifies what value needs to be changed and how"
                                            },
                                            "find": {
                                                "type": "string",
                                                "description": "Find searches for a specific value if it exists and return false if it doesn't"
                                            },
                                            "findsubmatch": {
                                                "properties": {
                                                    "pattern": {
                                                        "type": "string",
                                                        "description": "Pattern defines regular expression to use for retrieving a submatch"
                                                    },
                                                    "deprecatedcaptureindex": {
                                                        "type": "integer"
                                                    },
                                                    "captureindex": {
                                                        "type": "integer",
                                                        "description": "CaptureIndex defines which substring occurrence to retrieve. Note also that a value of `0` for `captureIndex` returns all submatches, and individual submatch indexes start at `1`."
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "type": "object",
                                                "description": "Find searches for a specific value if it exists then return the value using regular expression"
                                            },
                                            "semverinc": {
                                                "type": "string",
                                                "description": "SemvVerInc specifies a  comma separated list semantic versioning component that needs to be upgraded."
                                            }
                                        },
                                        "additionalProperties": false,
                                        "type": "object",
                                        "description": "Transformer holds a tranformer rule"
                                    },
                                    "type": "array",
                                    "description": "transformers defines how the default input value need to be transformed"
                                },
                                "spec": {
                                    "$schema": "http://json-schema.org/draft-04/schema",
                                    "properties": {
                                        "file": {
                                            "type": "string",
                                            "description": "Specifies the YAML file"
                                        },
                                        "key": {
                                            "type": "string",
                                            "description": "Specifies the YAML key"
                                        },
                                        "value": {
                                            "type": "string",
                                            "description": "Specifies the YAML value"
                                        },
                                        "keyonly": {
                                            "type": "boolean",
                                            "description": "[condition] allow checking for only the existence of a key (not its value)"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "type": "object",
                                    "description": "Spec defines a specification for a \"yaml\" resource parsed from an updatecli manifest file"
                                },
                                "scmid": {
                                    "type": "string",
                                    "description": "scmid specifies the scm configuration key associated to the current resource"
                                },
                                "reporttitle": {
                                    "type": "string"
                                },
                                "reportbody": {
                                    "type": "string"
                                },
                                "disablesourceinput": {
                                    "type": "boolean"
                                },
                                "sourceid": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "type": "object",
                            "required": [
                                "kind"
                            ]
                        }
                    ]
                }
            },
            "type": "object",
            "description": "Targets defines the list of target configuration"
        },
        "version": {
            "type": "string",
            "description": "Version specifies the mininum updatecli version compatible with the manifest"
        }
    },
    "additionalProperties": false,
    "type": "object",
    "required": [
        "name"
    ],
    "description": "Spec contains pipeline configuration"
}